{"version":3,"sources":["../../../src/index.ts","../../../../src/components/ToolbarRow.tsx","../../../../src/components/Dropdown.tsx","../../../../src/components/DropdownWrapper.tsx","../../../../src/lib/randomName.ts","../../../src/clocks.ts","../../../src/TeamManager.ts","../../../src/toArray.ts","../../../../src/components/MenuItem.tsx","../../../../src/components/Toolbar.tsx","../../../../src/lib/localUser.ts","../../../src/constants.ts","../../../../src/components/Status.tsx","../../../src/StoreManager.ts","../../../src/ConnectionManager.ts","../../../src/Connection.ts","../../../src/Synchronizer.ts","../../../src/Message.ts","../../../src/getMiddleware.ts","../../../src/getReducer.ts","../../../src/Repo.ts","../../../../src/components/Button.tsx","../../../src/Collection.ts","../../../../src/components/StatusLight.tsx","../../../../src/components/TeamDropdown.tsx","../../../../src/components/Item.tsx","../../../../src/components/WelcomeMessage.tsx","redux/actions.ts","types.ts","components/AddTodo.tsx","lib/randomName.ts","redux/logger.ts","redux/reducers.ts","redux/store.ts","components/App.tsx","redux/useStore.tsx","components/Todo.tsx","redux/selectors.ts","components/TodoList.tsx","components/Todos.tsx","lib/pluralize.ts","components/VisibilityFilters.tsx","components/ClearCompletedButton.tsx","serviceWorker.js","index.tsx","../../../../src/components/Group.tsx","../../../src/types.ts"],"names":["react_1","useState","storeManager","discoveryKey","team","this","document","ActionType","VisibilityFilter","actions","content","type","ADD_TODO","payload","id","uuid","TOGGLE_TODO","EDIT_TODO","DESTROY_TODO","filter","SET_FILTER","CLEAR_COMPLETED","AddTodo","input","useRef","dispatch","useDispatch","onSubmit","e","preventDefault","current","newText","value","trim","length","className","placeholder","ref","autoFocus","randomElement","arr","Math","floor","random","discoveryKeyParts","predicates","objects","log","debug","initialState","visibilityFilter","ALL","todoList","todoMap","middlewares","store","next","action","getState","result","StoreManager","databaseName","proxyReducer","state","s","push","completed","_id","includes","App","useQueryParam","key","setKey","appStore","generateNewKey","setAppStore","useEffect","joinStore","then","newStore","newKey","createStore","useStore","map","join","onStoreReady","Todos","Todo","editing","setEditing","editContent","setEditContent","select","save","saveContent","target","leaveEditMode","restoreContent","cn","checked","onChange","onClick","style","cursor","onBlur","onKeyDown","getAllTodos","getTodo","getFilteredTodos","allTodos","INCOMPLETE","todo","COMPLETED","Error","getVisibleTodos","getVisibilityFilter","TodoList","todos","useSelector","word","activeTodos","activeCount","hidden","flexGrow","cx","main","footer","ClearCompletedButton","VisibilityFilters","activeFilter","Object","keys","filterKey","currentFilter","selected","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"mjBAAA,aAAS,8FACT,WAEA,YAAS,8EAAM,gFAAO,gFAAO,gFAAO,8EAAM,4FAAa,oFAAS,+E,iHCAnD,YAA+B,YAAiB,IAAd,EAAc,EAAd,SAC7C,OACE,2BACE,UAAU,8GAIU,UAEnB,SAAQ,K,odCTF,WAAiE,SAAC,GAKxE,IAJL,EAEQ,EAFR,KAIS,EAFD,EADR,aAGG,MAHK,IAGL,EAFH,EAAQ,EAAR,SACG,EAAK,IAJqE,6BAKvE,OACN,2BACE,UAAW,CACT,EAAO,QAAU,SACjB,qBACA,YACA,yBACA,2BACA,aACA,KAAK,KACH,IAAC,CAAE,UACH,EAAK,UAER,SAAQ,K,meCpBT,EAAJ,KACA,QACA,SAEa,kBAA0C,SAAC,GAKnD,IAJH,EAEQ,EAFR,SACA,EACQ,EADR,WACA,EAAQ,EAAR,SACG,EAAK,IAJ8C,sCAKnD,EACqB,YAAS,GAD9B,SACI,EADJ,KACU,EADV,KAKH,OACE,4BAAK,UAAU,yBAA4B,EAAK,WAC9C,MAAC,SAAM,eAAC,QALG,kBAAM,YAAW,kBAAM,GAAS,OAKlB,OAJhB,kBAAM,YAAW,kBAAM,GAAQ,KAAQ,MAIT,SAAU,GAAQ,UACtD,SAAU,GAEb,MAAC,WAAQ,eAAC,KAAM,GAAI,UAAG,SAAQ,WAAY,K,+HCpBjD,YAEM,EAAgB,SAAC,GAAD,OAAmB,EAAI,KAAK,MAAM,KAAK,SAAW,EAAI,UAEtE,EAAoB,CAAC,aAAY,WAC1B,qBAAqB,kBAAc,EAAkB,IAAI,GAAe,KAAK,MAE1F,IAAM,EAAgB,CACpB,CACE,YACA,UACA,QACA,WACA,QACA,UACA,WACA,SACA,SACA,UACA,YACA,WACA,WACA,OACA,aACA,YACA,SACA,OACA,YACA,YACA,UACA,eACA,YACA,WACA,QACA,QACA,UACA,YACA,OACA,aACA,SACA,SACA,QACA,QACA,OACA,SACA,SACA,WACA,WACA,aACA,UACA,MACA,YACA,YACA,aACA,WACA,UACA,WACA,YACA,WACA,UACA,QACA,OACA,cACA,WACA,QAEF,CACE,WACA,WACA,UACA,WACA,YACA,UACA,YACA,SACA,WACA,UACA,YACA,SACA,MACA,WACA,WACA,MACA,QACA,YACA,SACA,SACA,YACA,WACA,YACA,MACA,OACA,SACA,SACA,SACA,SACA,QACA,YACA,aACA,WACA,aACA,UACA,OACA,SACA,YACA,SACA,UACA,UACA,cACA,UACA,YACA,WACA,YACA,WACA,YACA,UACA,SACA,QACA,SACA,WACA,WACA,WACA,UACA,cACA,UACA,WACA,YACA,YACA,UACA,YACA,UACA,cACA,aACA,aACA,WACA,QACA,WACA,SACA,aACA,YACA,UACA,UACA,SACA,WACA,UACA,YACA,QACA,WACA,WACA,cACA,UACA,UACA,SACA,YACA,QACA,YACA,QACA,QACA,WACA,MACA,SACA,SACA,UACA,WACA,WACA,UACA,WACA,aACA,OACA,WACA,UACA,QACA,SACA,SACA,UACA,cACA,OACA,YACA,QACA,SACA,UACA,cACA,YACA,UACA,aACA,UACA,UACA,UACA,UACA,aACA,YACA,WACA,UACA,cACA,WACA,cACA,WACA,QACA,SACA,SACA,SACA,aACA,SACA,YACA,WACA,aACA,YACA,YACA,aACA,WACA,UACA,UACA,QACA,UACA,OACA,SACA,QACA,UACA,SACA,WACA,OACA,UACA,WACA,SACA,UACA,QACA,UACA,WACA,SACA,aACA,UACA,SACA,YACA,cACA,WACA,SACA,QACA,WACA,QACA,WACA,aACA,UACA,UACA,WACA,YACA,cACA,SACA,UACA,QACA,UACA,YACA,OACA,SACA,UACA,QACA,MACA,SACA,gBACA,QACA,WACA,UACA,WACA,SACA,aACA,YACA,UACA,UACA,UACA,WACA,MACA,SACA,UACA,UACA,YACA,WACA,SACA,YACA,SACA,OACA,SACA,QACA,UACA,UACA,cACA,WACA,aACA,aACA,UACA,aACA,SACA,WACA,UACA,UACA,WACA,YACA,UACA,WACA,OACA,QACA,QACA,QACA,SACA,aACA,WACA,aACA,QACA,UACA,QACA,OACA,QACA,QACA,UACA,cACA,SACA,SACA,YACA,YACA,QACA,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","file":"static/js/main.ba44e566.chunk.js","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StorageAdapter = void 0;\nvar StorageAdapter = /** @class */ (function () {\n    function StorageAdapter(options) {\n        var databaseName = options.databaseName, discoveryKey = options.discoveryKey;\n        this.storageKey = \"@localfirst_state_\" + databaseName + \"_\" + discoveryKey.substr(0, 12);\n    }\n    return StorageAdapter;\n}());\nexports.StorageAdapter = StorageAdapter;\n__exportStar(require(\"./types\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Container = void 0;\nconst jsx_runtime_1 = require(\"@emotion/react/jsx-runtime\");\nconst Container = ({ children }) => {\n    return (jsx_runtime_1.jsx(\"div\", Object.assign({ className: \"\\n        flex flex-row \\n        bg-gray-100\\n        border-b border-gray-400\\n        text-sm font-mono\" }, { children: children }), void 0));\n};\nexports.Container = Container;\n//# sourceMappingURL=ToolbarRow.js.map","\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Dropdown = void 0;\nconst jsx_runtime_1 = require(\"@emotion/react/jsx-runtime\");\nconst Dropdown = (_a) => {\n    var { open, width = 200, children } = _a, props = __rest(_a, [\"open\", \"width\", \"children\"]);\n    return (jsx_runtime_1.jsx(\"div\", Object.assign({ className: [\n            open ? 'block' : 'hidden',\n            'absolute mt-1 z-20',\n            'shadow-lg',\n            'border border-gray-400',\n            'divide-y divide-gray-400',\n            'bg-white ',\n        ].join(' '), css: { width } }, props, { children: children }), void 0));\n};\nexports.Dropdown = Dropdown;\n//# sourceMappingURL=Dropdown.js.map","\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DropdownWrapper = void 0;\nconst jsx_runtime_1 = require(\"@emotion/react/jsx-runtime\");\n/** @jsxImportSource @emotion/react */\nconst react_1 = require(\"react\");\nconst Button_1 = require(\"./Button\");\nconst Dropdown_1 = require(\"./Dropdown\");\nconst DropdownWrapper = (_a) => {\n    var { children, buttonText, disabled } = _a, props = __rest(_a, [\"children\", \"buttonText\", \"disabled\"]);\n    const [open, setOpen] = react_1.useState(false);\n    const toggle = () => setTimeout(() => setOpen(!open));\n    const hide = () => setTimeout(() => setOpen(false), 500);\n    return (jsx_runtime_1.jsxs(\"div\", Object.assign({ className: \"relative inline-block\" }, props, { children: [jsx_runtime_1.jsx(Button_1.Button, Object.assign({ onFocus: toggle, onBlur: hide, disabled: disabled }, { children: buttonText }), void 0),\n            jsx_runtime_1.jsx(Dropdown_1.Dropdown, Object.assign({ open: open }, { children: children }), void 0)] }), void 0));\n};\nexports.DropdownWrapper = DropdownWrapper;\n//# sourceMappingURL=DropdownWrapper.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomUserName = exports.randomDiscoveryKey = void 0;\nconst friendly_words_1 = require(\"friendly-words\");\nconst randomElement = (arr) => arr[Math.floor(Math.random() * arr.length)];\nconst discoveryKeyParts = [friendly_words_1.predicates, friendly_words_1.objects];\nconst randomDiscoveryKey = () => discoveryKeyParts.map(randomElement).join('-');\nexports.randomDiscoveryKey = randomDiscoveryKey;\nconst userNameParts = [\n    [\n        'admirable',\n        'admiral',\n        'baron',\n        'baroness',\n        'brave',\n        'captain',\n        'charming',\n        'chatty',\n        'clever',\n        'colonel',\n        'commander',\n        'corporal',\n        'countess',\n        'dame',\n        'delightful',\n        'detective',\n        'doctor',\n        'duke',\n        'eccentric',\n        'efficient',\n        'elusive',\n        'entertaining',\n        'excellent',\n        'friendly',\n        'funky',\n        'funny',\n        'general',\n        'hilarious',\n        'lady',\n        'lieutenant',\n        'little',\n        'lovely',\n        'madam',\n        'major',\n        'miss',\n        'missus',\n        'mister',\n        'mistress',\n        'monsieur',\n        'mysterious',\n        'nervous',\n        'old',\n        'president',\n        'professor',\n        'remarkable',\n        'reverend',\n        'senator',\n        'señor',\n        'señora',\n        'sergeant',\n        'strange',\n        'sweet',\n        'tame',\n        'trustworthy',\n        'viscount',\n        'wise',\n    ],\n    [\n        'aardvark',\n        'aardwolf',\n        'abalone',\n        'albacore',\n        'albatross',\n        'alewife',\n        'alligator',\n        'alpaca',\n        'anaconda',\n        'anchovy',\n        'angelfish',\n        'angler',\n        'ant',\n        'anteater',\n        'antelope',\n        'ape',\n        'aphid',\n        'armadillo',\n        'baboon',\n        'badger',\n        'bandicoot',\n        'barnacle',\n        'barracuda',\n        'bat',\n        'bear',\n        'beaver',\n        'bedbug',\n        'beetle',\n        'beluga',\n        'bison',\n        'blackbird',\n        'bluebeetle',\n        'bluebird',\n        'bluebottle',\n        'bluejay',\n        'boar',\n        'bobcat',\n        'bowerbird',\n        'bowfin',\n        'bowhead',\n        'boxfish',\n        'bristletail',\n        'buffalo',\n        'bullfinch',\n        'bullfrog',\n        'bumblebee',\n        'bushbaby',\n        'butterfly',\n        'buzzard',\n        'caiman',\n        'camel',\n        'canary',\n        'capuchin',\n        'capybara',\n        'cardinal',\n        'caribou',\n        'caterpillar',\n        'catfish',\n        'cavefish',\n        'centipede',\n        'chameleon',\n        'cheetah',\n        'chickadee',\n        'chicken',\n        'chickenhawk',\n        'chimpanzee',\n        'chinchilla',\n        'chipmunk',\n        'cobra',\n        'cockatoo',\n        'condor',\n        'copperhead',\n        'cormorant',\n        'cowbird',\n        'cowfish',\n        'coyote',\n        'crayfish',\n        'cricket',\n        'crocodile',\n        'dingo',\n        'puppydog',\n        'kittycat',\n        'bunnyrabbit',\n        'dogfish',\n        'dolphin',\n        'donkey',\n        'dragonfly',\n        'eagle',\n        'earthworm',\n        'egret',\n        'eland',\n        'elephant',\n        'elk',\n        'falcon',\n        'ferret',\n        'firefly',\n        'flamingo',\n        'flatworm',\n        'flicker',\n        'flounder',\n        'flycatcher',\n        'frog',\n        'fruitfly',\n        'gazelle',\n        'gecko',\n        'gerbil',\n        'gibbon',\n        'giraffe',\n        'gnatcatcher',\n        'goat',\n        'goldfinch',\n        'goose',\n        'gopher',\n        'gorilla',\n        'grasshopper',\n        'groundhog',\n        'guanaco',\n        'guitarfish',\n        'haddock',\n        'hagfish',\n        'halibut',\n        'hamster',\n        'hartebeest',\n        'hawksbill',\n        'hedgehog',\n        'herring',\n        'honeybadger',\n        'horsefly',\n        'hummingbird',\n        'humpback',\n        'hyena',\n        'iguana',\n        'impala',\n        'jackal',\n        'jackrabbit',\n        'jaguar',\n        'jellyfish',\n        'kangaroo',\n        'kingfisher',\n        'kingsnake',\n        'koalabear',\n        'kookaburra',\n        'lacewing',\n        'ladybug',\n        'lemming',\n        'lemur',\n        'leopard',\n        'lion',\n        'lizard',\n        'llama',\n        'lobster',\n        'locust',\n        'lovebird',\n        'lynx',\n        'macaque',\n        'mackerel',\n        'magpie',\n        'mallard',\n        'mamba',\n        'manatee',\n        'mandrill',\n        'mantis',\n        'meadowlark',\n        'meerkat',\n        'merlin',\n        'millipede',\n        'mockingbird',\n        'mongoose',\n        'monkey',\n        'moose',\n        'mosquito',\n        'mouse',\n        'mudpuppy',\n        'mudskipper',\n        'muskrat',\n        'narwhal',\n        'nautilus',\n        'nighthawk',\n        'nightingale',\n        'ocelot',\n        'octopus',\n        'okapi',\n        'opossum',\n        'orangutan',\n        'oryx',\n        'osprey',\n        'ostrich',\n        'otter',\n        'owl',\n        'oyster',\n        'oystercatcher',\n        'panda',\n        'pangolin',\n        'panther',\n        'parakeet',\n        'parrot',\n        'parrotfish',\n        'partridge',\n        'peacock',\n        'pelican',\n        'penguin',\n        'pheasant',\n        'pig',\n        'pigeon',\n        'piranha',\n        'polecat',\n        'porcupine',\n        'porpoise',\n        'possum',\n        'ptarmigan',\n        'puffin',\n        'puma',\n        'python',\n        'quail',\n        'quetzal',\n        'raccoon',\n        'rattlesnake',\n        'reindeer',\n        'rhinoceros',\n        'roadrunner',\n        'rotifer',\n        'salamander',\n        'salmon',\n        'sandfish',\n        'sardine',\n        'scallop',\n        'scorpion',\n        'seasquirt',\n        'seagull',\n        'seahorse',\n        'seal',\n        'shark',\n        'sheep',\n        'shrew',\n        'shrimp',\n        'sidewinder',\n        'silkworm',\n        'silverfish',\n        'skunk',\n        'skylark',\n        'sloth',\n        'slug',\n        'snail',\n        'snake',\n        'sparrow',\n        'sparrowhawk',\n        'spider',\n        'sponge',\n        'spoonbill',\n        'springbok',\n        'squid',\n        'squirrel',\n        'starfish',\n        'starling',\n        'stingray',\n        'stork',\n        'sturgeon',\n        'swallow',\n        'swan',\n        'swordfish',\n        'tadpole',\n        'tapir',\n        'tarantula',\n        'terrapin',\n        'tiger',\n        'tilapia',\n        'toad',\n        'tortoise',\n        'toucan',\n        'treefrog',\n        'treesnake',\n        'triggerfish',\n        'trout',\n        'tuna',\n        'turkey',\n        'turtle',\n        'urchin',\n        'vicuña',\n        'viper',\n        'vulture',\n        'wallaby',\n        'walrus',\n        'warthog',\n        'wasp',\n        'whitefish',\n        'wildebeest',\n        'wolf',\n        'wolverine',\n        'wombat',\n        'woodchuck',\n        'woodpecker',\n        'yak',\n        'yellowjacket',\n        'zebra',\n    ],\n];\nconst randomUserName = () => userNameParts.map(randomElement).join('.');\nexports.randomUserName = randomUserName;\n//# sourceMappingURL=randomName.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getClock = exports.getMissingChanges = exports.isMoreRecent = exports.mergeClocks = exports.EMPTY_CLOCK = void 0;\nconst R = __importStar(require(\"ramda\"));\nconst automerge_1 = __importDefault(require(\"automerge\"));\nconst immutable_1 = require(\"immutable\");\n/**\n * A vector clock is a map, where the keys are the actorIds of all actors that have been active on a\n * particular document, and the values are the most recent sequence number for that actor. The\n * sequence number starts at 1 and increments every time an actor makes a change.\n */\nexports.EMPTY_CLOCK = {};\n/** Merges the clocks, keeping the maximum sequence number for each node */\nfunction mergeClocks(oldClock, newClock) {\n    const largestWins = (x = 0, y = 0) => Math.max(x, y);\n    return R.mergeWith(largestWins, oldClock, newClock);\n}\nexports.mergeClocks = mergeClocks;\n/** Returns true if there are any actors in clock1 that have more recent updates than in clock2 */\nconst isMoreRecent = (clock1, clock2) => {\n    if (clock2 === undefined)\n        return true;\n    const actors = Object.keys(Object.assign(Object.assign({}, clock1), clock2));\n    const clockIsMoreRecent = (actorId) => (clock1[actorId] || 0) > (clock2[actorId] || 0);\n    return actors.some(clockIsMoreRecent);\n};\nexports.isMoreRecent = isMoreRecent;\n// TODO replace these with native Automerge functions\nconst _A = Object.assign(Object.assign({}, automerge_1.default), { getMissingChanges: (ourDoc, theirClock) => {\n        if (theirClock === undefined)\n            return [];\n        const ourState = automerge_1.default.Frontend.getBackendState(ourDoc);\n        return automerge_1.default.Backend.getMissingChanges(ourState, theirClock);\n    }, getClock: (doc) => {\n        const state = automerge_1.default.Frontend.getBackendState(doc); // BackendState doesn't have a public API\n        return state.getIn(['opSet', 'clock']);\n    } });\n// coerce our clocks to A.Clocks\nconst getMissingChanges = (ourDoc, theirClock) => _A.getMissingChanges(ourDoc, immutable_1.Map(theirClock));\nexports.getMissingChanges = getMissingChanges;\nconst getClock = (doc) => immutable_1.Map(_A.getClock(doc)).toJS();\nexports.getClock = getClock;\n//# sourceMappingURL=clocks.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.performAuthHandshake = exports.getTeamManager = exports.TeamManager = void 0;\nconst automerge_1 = __importDefault(require(\"automerge\"));\nconst Auth = __importStar(require(\"@philschatz/auth\"));\nconst constants_1 = require(\"./constants\");\nconst types_1 = require(\"./types\");\nconst pendingSaves = [];\nconst AUTH_KEY = '_AUTH';\n// A Team is associated with a discoveryKey and may be in one of the following states:\n// - loaded\n// - loading from storage\n// - invited-to\nclass TeamManager {\n    constructor() {\n        this.teams = new Map();\n    }\n    getInvitation(discoveryKey) {\n        const t = this.teams.get(discoveryKey);\n        return t && t[1];\n    }\n    instantiateTeamIfAvailable(repo, discoveryKey, invitation) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let team = this.teams.get(discoveryKey);\n            if (team) {\n                return team[0];\n            }\n            else if (invitation) {\n                this.teams.set(discoveryKey, [undefined, invitation]);\n            }\n            else {\n                // Try loading the team from Storage\n                if (repo.has(AUTH_KEY)) {\n                    const state = types_1.ensure(yield repo.get(AUTH_KEY));\n                    const user = types_1.ensure(Auth.loadUser());\n                    const team = new Auth.Team({\n                        source: state,\n                        context: { user }\n                    });\n                    this.addListener(repo, discoveryKey, team);\n                    return team;\n                }\n            }\n        });\n    }\n    instantiateTeamDefinitely(repo, discoveryKey, state) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let team = this.teams.get(discoveryKey);\n            if (team && team[0]) {\n                throw new Error('BUG: Should not already have a team loaded up');\n            }\n            else {\n                // Try loading the team from Storage\n                repo.set(AUTH_KEY, automerge_1.default.from(removeUndefined(state)));\n                const user = types_1.ensure(Auth.loadUser());\n                const team = new Auth.Team({\n                    source: state,\n                    context: { user }\n                });\n                yield this.addTeam(repo, discoveryKey, team);\n                return team;\n            }\n        });\n    }\n    addTeam(repo, discoveryKey, team) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.teams.has(discoveryKey)) {\n                throw new Error('BUG? seems this already has a Team');\n            }\n            this.teams.set(discoveryKey, [team, undefined]);\n            yield repo.set(AUTH_KEY, automerge_1.default.from(removeUndefined(team.chain)));\n            this.addListener(repo, discoveryKey, team);\n        });\n    }\n    addListener(repo, discoveryKey, team) {\n        team.on('updated', ({ head: headId }) => __awaiter(this, void 0, void 0, function* () {\n            const headNode = removeUndefined(team.chain.links[headId]);\n            // Perform saves in order. Otherwise the storage gets corrupted\n            if (pendingSaves.length > 0) {\n                yield Promise.all(pendingSaves);\n                pendingSaves.splice(0, pendingSaves.length); // clear when done saving\n            }\n            pendingSaves.push(repo.change(AUTH_KEY, (doc) => {\n                if (!doc.root) {\n                    doc.root = headId;\n                }\n                if (!doc.links) {\n                    doc.links = {};\n                }\n                if (!doc.links[headId]) {\n                    doc.head = headId;\n                    doc.links[headId] = headNode;\n                    // Loop over all the previous nodes and ensure they were added (out of sync updated events)\n                    let curr = headNode;\n                    while (true) {\n                        const prevId = curr.body.prev;\n                        if (!prevId) {\n                            break;\n                        }\n                        const prev = team.chain.links[prevId];\n                        if (!doc.links[prevId]) {\n                            doc.links[prevId] = removeUndefined(prev);\n                        }\n                        else {\n                            break; // prev node is already in the chain so we can skip it and all the previous ones\n                        }\n                        curr = prev;\n                    }\n                }\n            }));\n        }));\n    }\n}\nexports.TeamManager = TeamManager;\nconst teamManager = new TeamManager();\nfunction getTeamManager() {\n    return teamManager;\n}\nexports.getTeamManager = getTeamManager;\nfunction removeUndefined(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\nfunction performAuthHandshake(repo, discoveryKey, invite, socket) {\n    return __awaiter(this, void 0, void 0, function* () {\n        function send(action, payload) {\n            socket.send(JSON.stringify({ action, payload }));\n        }\n        console.log('generating proof using invitation:', invite);\n        const proof = Auth.generateProof(invite.invitationSeed, invite.username);\n        console.log('Sending AUTH:JOIN to peer');\n        send('AUTH:JOIN', proof);\n        return new Promise((resolve, reject) => {\n            const listener = ({ data }) => __awaiter(this, void 0, void 0, function* () {\n                const message = JSON.parse(data);\n                const { type, action, payload } = message;\n                if (type === 'HELLO') {\n                    // ignore\n                    return;\n                }\n                switch (action) {\n                    case 'ENCRYPTED':\n                        console.log('Ignoring encrypted message');\n                        break;\n                    case 'AUTH:JOIN':\n                        console.log('Well this is awkward. The peer without a Team is being asked to respond to an AUTH:JOIN event. All we can do is ignore it');\n                        break;\n                    case 'AUTH:ADMITTED':\n                        // const authHistoryChanges = payload\n                        // const authHistoryDoc = A.applyChanges(A.from({}), authHistoryChanges)\n                        const authHistoryDoc = payload;\n                        const user = Auth.createUser({\n                            userName: invite.username,\n                            deviceName: 'Laptop',\n                            deviceType: 1,\n                            seed: invite.invitationSeed\n                        });\n                        // Save the user to local storage so that it can be loaded again. Note: This means only one Todo is able to be loaded at a time.\n                        const STORAGE_KEY = 'LF_AUTH_STORAGE';\n                        const USER_STORAGE_KEY = `${STORAGE_KEY}__USER`;\n                        window.localStorage.setItem(USER_STORAGE_KEY, JSON.stringify({\n                            userName: invite.username,\n                            keys: user.keys,\n                            keyHistory: user.keyHistory,\n                            device: user.device\n                        }));\n                        const team = new Auth.Team({\n                            source: authHistoryDoc,\n                            context: { user: user }\n                        });\n                        team.encrypt('Just testing for runtime error. Howdy Everyone! If this fails then BUG???? none of the lockboxes have a publicKey that matches the ephemeral one for this invitee. Ensure that the code for the tempkeys in Auth.Team.join are seeded with \"invitationSeed\" instead of \"this.seed\"');\n                        // Update my keys\n                        team.join(proof);\n                        // We successfully loaded the team. Resolve promises and remove this authentication listener\n                        socket.removeEventListener(constants_1.MESSAGE, listener);\n                        resolve(team);\n                        yield getTeamManager().addTeam(repo, discoveryKey, team);\n                        break;\n                    default:\n                        console.error(message);\n                        throw new Error(`BUG: unsupported message action \"${action}\"`);\n                }\n            });\n            socket.addEventListener(constants_1.MESSAGE, listener);\n        });\n    });\n}\nexports.performAuthHandshake = performAuthHandshake;\n//# sourceMappingURL=TeamManager.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toArray = void 0;\nconst toArray = (x) => (x === null ? [] : Array.isArray(x) ? x : [x]);\nexports.toArray = toArray;\n//# sourceMappingURL=toArray.js.map","\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MenuItem = void 0;\nconst jsx_runtime_1 = require(\"@emotion/react/jsx-runtime\");\nconst Button_1 = require(\"./Button\");\nconst MenuItem = (_a) => {\n    var { children, className } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (jsx_runtime_1.jsx(Button_1.Button, Object.assign({ className: [\n            'block ml-0 mr-0',\n            'w-full',\n            'text-left',\n            // reset borders\n            'rounded-t-none rounded-r-none rounded-b-none rounded-l-none ',\n            'border-t-0 border-r-0 border-b-0 border-l-0',\n            className,\n        ].join(' ') }, props, { children: children }), void 0));\n};\nexports.MenuItem = MenuItem;\n//# sourceMappingURL=MenuItem.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Toolbar = void 0;\nconst jsx_runtime_1 = require(\"@emotion/react/jsx-runtime\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst react_1 = require(\"react\");\nconst use_query_params_1 = require(\"use-query-params\");\nconst localUser_1 = require(\"../lib/localUser\");\nconst randomName_1 = require(\"../lib/randomName\");\nconst Button_1 = require(\"./Button\");\nconst Group_1 = require(\"./Group\");\nconst Status_1 = require(\"./Status\");\nconst TeamDropdown_1 = require(\"./TeamDropdown\");\nconst ToolbarRow_1 = require(\"./ToolbarRow\");\nconst WelcomeMessage_1 = require(\"./WelcomeMessage\");\nconst Toolbar = ({ storeManager, onStoreReady, children, }) => {\n    // Hooks\n    const [discoveryKey, setDiscoveryKey] = use_query_params_1.useQueryParam('key', use_query_params_1.StringParam);\n    const [, setAppStore] = react_1.useState();\n    const [busy, setBusy] = react_1.useState(false);\n    // join or create store on load\n    react_1.useEffect(() => {\n        log('setup');\n        if (discoveryKey)\n            joinStore(discoveryKey);\n        else\n            createStore();\n    }, []); // only runs on first render\n    const log = debug_1.default(`lf:toolbar:${discoveryKey}`);\n    log('render');\n    // 'new' button click\n    const createStore = () => __awaiter(void 0, void 0, void 0, function* () {\n        setBusy(true);\n        const newDiscoveryKey = randomName_1.randomDiscoveryKey();\n        setDiscoveryKey(newDiscoveryKey);\n        const newStore = yield storeManager.createStore(newDiscoveryKey);\n        yield storeManager.listenToConnections(newDiscoveryKey);\n        setAppStore(newStore);\n        onStoreReady(newStore, newDiscoveryKey);\n        setBusy(false);\n        log('created store', newDiscoveryKey);\n        return newDiscoveryKey;\n    });\n    const joinStore = (newDiscoveryKey) => __awaiter(void 0, void 0, void 0, function* () {\n        if (!newDiscoveryKey)\n            return;\n        if (busy)\n            return;\n        setBusy(true);\n        setDiscoveryKey(newDiscoveryKey);\n        const newStore = yield storeManager.joinStore(newDiscoveryKey);\n        yield storeManager.listenToConnections(newDiscoveryKey);\n        setAppStore(newStore);\n        onStoreReady(newStore, newDiscoveryKey);\n        setBusy(false);\n        log('joined store', newDiscoveryKey);\n    });\n    // build url including discovery key\n    const url = (discoveryKey = '') => `${location.protocol}//${location.host}/?id=${discoveryKey}`;\n    // load a discoveryKey by navigating to its URL\n    const load = (discoveryKey) => {\n        if (discoveryKey !== undefined)\n            window.location.assign(url(discoveryKey));\n    };\n    const newClick = () => __awaiter(void 0, void 0, void 0, function* () {\n        const newDiscoveryKey = yield createStore();\n        setTimeout(() => load(newDiscoveryKey), 200);\n    });\n    return (jsx_runtime_1.jsxs(ToolbarRow_1.Container, { children: [jsx_runtime_1.jsx(WelcomeMessage_1.WelcomeMessage, { name: localUser_1.localUser.userName }, void 0),\n            jsx_runtime_1.jsx(TeamDropdown_1.TeamDropdown, {}, void 0),\n            jsx_runtime_1.jsx(Group_1.Group, { children: jsx_runtime_1.jsx(Button_1.Button, Object.assign({ onClick: newClick }, { children: \"\\uD83D\\uDCC4 New\" }), void 0) }, void 0),\n            jsx_runtime_1.jsx(Status_1.Status, { storeManager: storeManager }, void 0), children] }, void 0));\n};\nexports.Toolbar = Toolbar;\n//# sourceMappingURL=Toolbar.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.localUser = void 0;\nconst auth_1 = require(\"@philschatz/auth\");\nconst randomName_1 = require(\"./randomName\");\nconst _createUser = () => {\n    const userName = randomName_1.randomUserName();\n    // TODO Taco should expose DeviceType enum\n    return auth_1.createUser({ userName, deviceName: 'laptop', deviceType: 1 });\n};\nexports.localUser = auth_1.loadUser() || _createUser();\n//# sourceMappingURL=localUser.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DATA = exports.MESSAGE = exports.PEER_UPDATE = exports.PEER_REMOVE = exports.PEER = exports.ERROR = exports.CLOSE = exports.READY = exports.OPEN = exports.GLOBAL = exports.DELETED = exports.DEFAULT_RELAYS = exports.INITIALIZE = exports.RECEIVE_MESSAGE_FROM_PEER = void 0;\n// special messages\nexports.RECEIVE_MESSAGE_FROM_PEER = '@localfirst/state/RECEIVE_MESSAGE_FROM_PEER';\nexports.INITIALIZE = '@localfirst/state/INITIALIZE';\nexports.DEFAULT_RELAYS = ['wss://cevitxe-signal.herokuapp.com', `ws://${window.location.hostname}:8080`]; // default public relay\n// deleted flag\nexports.DELETED = '__DELETED';\n// global documentId\nexports.GLOBAL = '__global';\n// connection events\nexports.OPEN = 'open';\nexports.READY = 'ready';\nexports.CLOSE = 'close';\nexports.ERROR = 'error';\nexports.PEER = 'peer';\nexports.PEER_REMOVE = 'peer_remove';\nexports.PEER_UPDATE = 'peer_update';\nexports.MESSAGE = 'message';\nexports.DATA = 'data';\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Status = void 0;\nconst jsx_runtime_1 = require(\"@emotion/react/jsx-runtime\");\n/** @jsxImportSource @emotion/react */\nconst state_1 = require(\"@localfirst/state\");\nconst react_1 = require(\"react\");\nconst Group_1 = require(\"./Group\");\nconst StatusLight_1 = require(\"./StatusLight\");\nconst constants_1 = require(\"@localfirst/state/dist/src/constants\");\nconst Status = ({ storeManager }) => {\n    const [online, setOnline] = react_1.useState(false);\n    const [peers, setPeers] = react_1.useState([]);\n    const onPeer = (updatedPeers, updatedAuthenticatedUserInfo) => {\n        setPeers(updatedAuthenticatedUserInfo.map((v, i) => `${(v && v.type) === 'ADMIN' ? '👑' : ''} ${(v && v.name) ? v.name : `?${updatedPeers[i]}?`}`));\n    };\n    const onOpen = () => {\n        setOnline(true);\n        setPeers([]);\n    };\n    const onClose = () => {\n        setOnline(false);\n        setPeers([]);\n    };\n    const addListeners = () => {\n        storeManager.on(state_1.OPEN, onOpen);\n        storeManager.on(state_1.CLOSE, onClose);\n        storeManager.on(state_1.PEER, onPeer);\n        storeManager.on(state_1.PEER_REMOVE, onPeer);\n        storeManager.on(constants_1.PEER_UPDATE, onPeer);\n        return removeListeners; // return cleanup function\n    };\n    const removeListeners = () => {\n        storeManager.off(state_1.OPEN, onOpen);\n        storeManager.off(state_1.CLOSE, onClose);\n        storeManager.off(state_1.PEER, onPeer);\n        storeManager.off(state_1.PEER_REMOVE, onPeer);\n    };\n    react_1.useEffect(addListeners, [storeManager]); // fires when storeManager changes\n    const peerCountMessage = peers.length === 0\n        ? 'no peers are connected'\n        : peers.length === 1\n            ? `one peer is connected`\n            : `${peers.length} other peers are connected`;\n    const statusMessage = online ? `online; ${peerCountMessage}` : 'offline';\n    const peerItems = peers.map(p => jsx_runtime_1.jsx(\"li\", { children: jsx_runtime_1.jsxs(\"button\", { children: [getAvatar(p), p] }, void 0) }, p));\n    return (jsx_runtime_1.jsxs(Group_1.Group, Object.assign({ title: statusMessage }, { children: [jsx_runtime_1.jsxs(\"label\", { children: [jsx_runtime_1.jsx(StatusLight_1.StatusLight, { online: online }, void 0),\n                    online ? jsx_runtime_1.jsxs(\"span\", Object.assign({ style: { marginLeft: '.5em' } }, { children: [peers.length, \" online\"] }), void 0) : ''] }, void 0),\n            jsx_runtime_1.jsx(\"ul\", { children: peerItems }, void 0)] }), void 0));\n};\nexports.Status = Status;\nconst avatars = [\n    '👶',\n    '🧒',\n    '🧑',\n    '👱',\n    '🧔',\n    '👨‍🦰',\n    '👨‍🦳',\n    '👩',\n    '👩‍🦰',\n    '🧑‍🦰',\n    '👩‍🦱',\n    '🧑‍🦳',\n    '👱‍♀️',\n    '🧓',\n];\nconst hashCode = (s) => s.split('').reduce((a, b) => { a = ((a << 5) - a) + b.charCodeAt(0); return a & a; }, 0);\nfunction getAvatar(username) {\n    if (username.endsWith('?')) {\n        return null;\n    }\n    return avatars[Math.abs(hashCode(username)) % avatars.length];\n}\n//# sourceMappingURL=Status.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StoreManager = void 0;\nconst relay_client_1 = require(\"@localfirst/relay-client\");\nconst automerge_1 = __importDefault(require(\"automerge\"));\nconst cuid_1 = __importDefault(require(\"cuid\"));\nconst debug_1 = __importDefault(require(\"debug\"));\nconst events_1 = require(\"events\");\nconst redux_1 = require(\"redux\");\nconst redux_devtools_extension_1 = require(\"redux-devtools-extension\");\nconst Auth = __importStar(require(\"@philschatz/auth\"));\nconst query_string_1 = __importDefault(require(\"query-string\"));\nconst ConnectionManager_1 = require(\"./ConnectionManager\");\nconst constants_1 = require(\"./constants\");\nconst getMiddleware_1 = require(\"./getMiddleware\");\nconst getReducer_1 = require(\"./getReducer\");\nconst Repo_1 = require(\"./Repo\");\nconst types_1 = require(\"./types\");\nconst TeamManager_1 = require(\"./TeamManager\");\nlet log = debug_1.default('lf:StoreManager');\n// TODO\n/*\nThis API is janky and the 'storeManager' name is awkward. Prefer to focus on the Redux store that\nyou get from this -\n\n```ts\nimport {createStore, joinStore} from 'local-first-state'\n\nconst store = await createStore( ... )\n// OR\nconst store = await joinStore( ... )\n```\n\nHere `store` is a ConnectedStore, which is an *enhanced* Redux store.\n\n- It is a `Redux.Store`, an you can work with it as such; it has `getState` and `dispatch` etc.\n- It is also an `EventEmitter` so you can subscribe to `connect`, `disconnect`, `connectPeer`,\n  `disconnectPeer`.\n\nNext:\n\n- [ ] createStore and joinStore should match Redux.createStore API as much as possible\n- [ ] rename ConnectionEvents: `connect`, `disconnect`, `connectPeer`, `disconnectPeer`.\n*/\n/**\n * A StoreManager generates a Redux store with persistence (via the Repo class), networking (via\n * @localfirst/relay-client), and magical synchronization with peers (via automerge)\n */\nclass StoreManager extends events_1.EventEmitter {\n    constructor({ databaseName, proxyReducer, initialState, urls = constants_1.DEFAULT_RELAYS, middlewares = [], collections = [], }) {\n        super();\n        this.joinStore = (discoveryKey) => this.getStore(discoveryKey, false);\n        this.createStore = (discoveryKey) => this.getStore(discoveryKey, true);\n        this.getStore = (discoveryKey, isCreating = false) => __awaiter(this, void 0, void 0, function* () {\n            this.log(`${isCreating ? 'creating' : 'joining'} ${discoveryKey}`);\n            // userStore and Toolbar both call joinStore and end up creating different Repo instances. Let's just reuse them.\n            if (this.store) {\n                return this.store;\n            }\n            const clientId = localStorage.getItem('clientId') || relay_client_1.newid();\n            localStorage.setItem('clientId', clientId);\n            // Create repo for storage\n            this.repo = new Repo_1.Repo({\n                clientId,\n                discoveryKey,\n                databaseName: this.databaseName,\n                collections: this.collections,\n            });\n            const state = yield this.repo.init(this.initialState, isCreating);\n            // Create Redux store to expose to app\n            this.store = this.createReduxStore(state);\n            return this.store;\n        });\n        /**\n         * Close all connections and the repo's database\n         */\n        this.close = () => __awaiter(this, void 0, void 0, function* () {\n            this.log('closing');\n            if (this.connectionManager)\n                yield this.connectionManager.close();\n            // if (this.repo) await this.repo.close()\n            delete this.repo;\n            delete this.store;\n        });\n        this.proxyReducer = proxyReducer;\n        this.middlewares = middlewares;\n        this.initialState = initialState;\n        this.databaseName = databaseName;\n        this.urls = urls;\n        this.collections = collections;\n        this.log = debug_1.default(`lf:storemanager`);\n    }\n    listenToConnections(discoveryKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let invitationOrTeam;\n            let maybeTeam = yield TeamManager_1.getTeamManager().instantiateTeamIfAvailable(types_1.ensure(this.repo), discoveryKey);\n            if (maybeTeam) {\n                invitationOrTeam = maybeTeam;\n            }\n            else {\n                const { invitationUser, invitationSeed } = query_string_1.default.parse(window.location.search, {\n                    parseBooleans: false,\n                    parseNumbers: false,\n                    arrayFormat: \"none\"\n                });\n                if (invitationUser && invitationSeed) {\n                    invitationOrTeam = { username: invitationUser.toString(), invitationSeed: invitationSeed.toString() };\n                }\n                else if (confirm('You were not given an invitation to this page. Do you want to create a new Team?')) {\n                    // Create a new team\n                    const user = Auth.createUser({\n                        userName: 'Alice',\n                        deviceName: 'Laptop',\n                        deviceType: 1\n                    });\n                    const t = Auth.createTeam('dream', { user });\n                    const team = yield TeamManager_1.getTeamManager().instantiateTeamDefinitely(types_1.ensure(this.repo), discoveryKey, t.chain);\n                    invitationOrTeam = team;\n                }\n                else {\n                    alert('You have chosen not to create or join a team. There is nothing left to do. Closing.');\n                    throw new Error('Did not choose to join a team or create a new team');\n                }\n            }\n            // Generate an invitation and alert the user so they can use it:\n            if (invitationOrTeam instanceof Auth.Team) {\n                if (invitationOrTeam.memberIsAdmin(invitationOrTeam.userName)) {\n                    const username = `Friend${(new Number(Math.round(Math.random() * 0x10000)).toString())}`;\n                    const { invitationSeed } = invitationOrTeam.invite(username);\n                    const qs = query_string_1.default.stringify(Object.assign(Object.assign({}, query_string_1.default.parse(window.location.search)), { invitationUser: username, invitationSeed }));\n                    window.history.replaceState(null, '', `?${qs}`);\n                    alert(`Invite a person by copying and pasting the URL in the browser to your friend`);\n                }\n            }\n            // Connect to discovery server to find peers and sync up with them\n            this.connectionManager = new ConnectionManager_1.ConnectionManager({\n                invitationOrTeam,\n                discoveryKey,\n                dispatch: types_1.ensure(this.store).dispatch,\n                repo: types_1.ensure(this.repo),\n                urls: this.urls,\n            });\n            pipeEvents({\n                source: this.connectionManager,\n                target: this,\n                events: [constants_1.OPEN, constants_1.CLOSE, constants_1.PEER, constants_1.PEER_REMOVE, constants_1.PEER_UPDATE],\n            });\n        });\n    }\n    createReduxStore(state) {\n        if (!this.repo)\n            throw new Error(`Can't create Redux store without repo`);\n        // TODO put arguments in the same order (this.proxyReducer, this.repo)\n        const reducer = getReducer_1.getReducer(this.proxyReducer, this.repo);\n        const middleware = getMiddleware_1.getMiddleware(this.repo, this.proxyReducer);\n        const enhancer = redux_devtools_extension_1.composeWithDevTools(redux_1.applyMiddleware(...this.middlewares, middleware));\n        return redux_1.createStore(reducer, state, enhancer);\n    }\n    get connectionCount() {\n        if (!this.connectionManager)\n            throw new Error('no connectionManager');\n        return this.connectionManager.connectionCount;\n    }\n}\nexports.StoreManager = StoreManager;\n// Use shorter IDs\nautomerge_1.default.uuid.setFactory(cuid_1.default);\nconst pipeEvents = ({ source, target, events, }) => events.forEach((event) => source.on(event, (...payload) => target.emit(event, ...payload)));\n//# sourceMappingURL=StoreManager.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst relay_client_1 = require(\"@localfirst/relay-client\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst events_1 = require(\"events\");\nconst Auth = __importStar(require(\"@philschatz/auth\"));\nconst Connection_1 = require(\"./Connection\");\nconst constants_1 = require(\"./constants\");\nconst TeamManager_1 = require(\"./TeamManager\");\nconst log = debug_1.default('lf:connectionmanager');\n/**\n * Wraps a Client and creates a Connection instance for each peer we connect to.\n */\nclass ConnectionManager extends events_1.EventEmitter {\n    constructor({ invitationOrTeam, repo, dispatch, discoveryKey, urls, clientId = relay_client_1.newid() }) {\n        super();\n        this.connections = {};\n        this.addPeer = (peer, discoveryKey) => __awaiter(this, void 0, void 0, function* () {\n            if (!this.dispatch || !this.repo)\n                return;\n            const socket = peer.get(discoveryKey);\n            // Use the team or perform a handshake to get the team\n            let team;\n            if (this.invitationOrTeam instanceof Auth.Team) {\n                team = yield this.invitationOrTeam;\n            }\n            else {\n                team = yield TeamManager_1.performAuthHandshake(this.repo, this.discoveryKey, this.invitationOrTeam, socket);\n                this.invitationOrTeam = team;\n            }\n            if (socket) {\n                const c = new Connection_1.Connection(team, this.repo, socket, this.dispatch);\n                this.connections[peer.id] = c;\n                c.on(constants_1.PEER_UPDATE, () => this.emit(constants_1.PEER_UPDATE, Object.keys(this.connections), Object.values(this.connections).map(c => c.getAuthenticatedUser())));\n            }\n            peer.on(constants_1.CLOSE, () => this.removePeer(peer.id));\n            this.emit(constants_1.PEER, Object.keys(this.connections), Object.values(this.connections).map(c => c.getAuthenticatedUser()));\n            log('added peer', peer.id);\n        });\n        this.removePeer = (peerId) => {\n            if (this.connections[peerId])\n                this.connections[peerId].close();\n            delete this.connections[peerId];\n            this.emit(constants_1.PEER_REMOVE, Object.keys(this.connections), Object.values(this.connections).map(c => c.getAuthenticatedUser()));\n            log('removed peer', peerId);\n        };\n        this.invitationOrTeam = invitationOrTeam;\n        this.repo = repo;\n        this.dispatch = dispatch;\n        this.discoveryKey = discoveryKey;\n        // TODO: randomly select a URL if more than one is provided? select best based on ping?\n        this.client = new relay_client_1.Client({ id: clientId, url: urls[0] });\n        this.client.join(discoveryKey);\n        this.client.on(constants_1.PEER, this.addPeer);\n        this.client.on(constants_1.OPEN, () => this.emit(constants_1.OPEN));\n        this.client.on(constants_1.CLOSE, () => this.emit(constants_1.CLOSE));\n    }\n    get connectionCount() {\n        return Object.keys(this.connections).length;\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const closeAllConnections = Object.keys(this.connections).map((peerId) => this.removePeer(peerId));\n            yield Promise.all(closeAllConnections);\n            this.connections = {};\n        });\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n//# sourceMappingURL=ConnectionManager.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connection = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst events_1 = require(\"events\");\nconst constants_1 = require(\"./constants\");\nconst Synchronizer_1 = require(\"./Synchronizer\");\nconst log = debug_1.default('lf:connection');\n/**\n * A `Connection` keeps one local document synchronized with one peer's replica of the same\n * document. It uses `Synchronizer` for the synchronization logic, and integrates it with our\n * networking stack and with the Redux store.\n */\nclass Connection extends events_1.EventEmitter {\n    constructor(team, repo, peerSocket, dispatch) {\n        super();\n        this.receive = ({ data }) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            let message = JSON.parse(data.toString());\n            log('receive %o', message);\n            if (message.action === 'AUTH:JOIN') {\n                const proof = message.payload;\n                try {\n                    this.team.admit(proof);\n                    log('admitted user to team');\n                    (_a = this.peerSocket) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify({ action: 'AUTH:ADMITTED', payload: this.team.chain }));\n                }\n                catch (e) {\n                    console.error('Admission to team failed', e);\n                    return;\n                }\n            }\n            else {\n                if (message.action === 'ENCRYPTED') {\n                    try {\n                        message = JSON.parse(this.team.decrypt(message.envelope));\n                    }\n                    catch (e) {\n                        console.error(e); // Decryption problem. Log it and move on\n                        return;\n                    }\n                    if (!this.team.verify(message)) {\n                        throw new Error('ERROR! Signed with unknown keys');\n                    }\n                    if (JSON.stringify(this.authenticatedUser) !== JSON.stringify(message.author)) {\n                        this.authenticatedUser = message.author;\n                        this.emit(constants_1.PEER_UPDATE, this.authenticatedUser);\n                    }\n                    message = message.contents;\n                }\n                this.emit('receive', message);\n                yield this.Synchronizer.receive(message); // Synchronizer will update repo directly\n                // hit the dispatcher to force it to pick up\n                this.dispatch({ type: constants_1.RECEIVE_MESSAGE_FROM_PEER });\n            }\n        });\n        this.send = (message, forcePlaintext = false) => {\n            const enc = {\n                action: 'ENCRYPTED',\n                envelope: this.team.encrypt(this.team.sign(message))\n            };\n            if (this.peerSocket)\n                try {\n                    if (forcePlaintext) {\n                        log('send plaintext %o', JSON.stringify(message));\n                        this.peerSocket.send(JSON.stringify(message));\n                    }\n                    else {\n                        log('send encrypted %o', JSON.stringify(message));\n                        this.peerSocket.send(JSON.stringify(enc));\n                    }\n                }\n                catch (_a) {\n                    log('tried to send but peer is no longer connected', this.peerSocket);\n                }\n        };\n        this.close = () => {\n            if (!this.peerSocket)\n                return;\n            this.peerSocket.close();\n            this.peerSocket = null;\n        };\n        this.getAuthenticatedUser = () => this.authenticatedUser;\n        log('new connection');\n        this.team = team;\n        this.repo = repo;\n        this.peerSocket = peerSocket;\n        this.dispatch = dispatch;\n        this.peerSocket.onmessage = this.receive.bind(this);\n        this.Synchronizer = new Synchronizer_1.Synchronizer(this.repo, this.send);\n        this.Synchronizer.open().then(() => this.emit('ready'));\n    }\n}\nexports.Connection = Connection;\n//# sourceMappingURL=Connection.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Synchronizer = void 0;\nconst automerge_1 = __importDefault(require(\"automerge\"));\nconst debug_1 = __importDefault(require(\"debug\"));\nconst clocks_1 = require(\"./clocks\");\nconst message = __importStar(require(\"./Message\"));\n/**\n * One instance of `Synchronizer` keeps one local document in sync with one remote peer's replica of the\n * same document.\n *\n * This class works with a local `Repo`; it listens for changes to documents, and if it thinks it\n * has changes that the remote peer doesn't know about, it generates a message to be sent the peer.\n * It also processes messages from its counterpart on the peer, and applies them to local documents\n * as needed.\n *\n * This class doesn't get involved in the actual transmission of the messages; it only generates\n * them for someone else to send, and processes them when someone else receives them. To integrate a\n * connection with a particular networking stack, two functions are used:\n *\n * - `send` (callback passed to the constructor, will be called when local state is updated) takes a\n *   message as argument, and sends it out to the remote peer.\n * - `receive` (method on the connection object) should be called by the network stack when a\n *   message is received from the remote peer.\n *\n * In this context, networking is provided by the `ConnectionManager`.\n *\n * The document to be synced is managed by a `Repo`. Whenever it is changed locally, call `setDoc()`\n * on the Repo. The connection registers a callback on the repo, and it figures out whenever there\n * are changes that need to be sent to the remote peer.\n *\n * To do this, we keep track of two clocks: ours and theirs.\n *\n * - \"Their\" clock is the most recent VClock that we think the peer has (either because they've told\n *   us that it's their clock, or because it corresponds to a state we have sent to them on this\n *   connection). Thus, everything more recent than theirClock should be sent to the peer.\n *\n * - \"Our\" clock is the most recent VClock that we've advertised to the peer (i.e. where we've told\n *   the peer that we have it).\n *\n * > Note: This class began life as a vendored & refactored copy of the `Automerge.Connection`\n * > class; if you're familiar with that class, this one plays exactly the same role.\n */\nclass Synchronizer {\n    /**\n     * @param repo A `Repo` containing the document being synchronized.\n     * @param send Callback function, called when the local document changes. Provided by the\n     * networking stack. Should send the given message to the remote peer.\n     */\n    constructor(repo, send) {\n        this.isOpen = false;\n        /** Looks up our last recorded clock for the requested document.\n         *  Our clocks are managed by the repo. */\n        this.getOurClock = (documentId) => this.repo.getClock(documentId);\n        /** We keep track of their clocks here. */\n        this.getTheirClock = (documentId) => this.theirClock[documentId];\n        this.repo = repo;\n        this.send = send;\n        this.theirClock = {};\n        this.log = debug_1.default(`lf:synchronizer:${repo.databaseName}`);\n    }\n    // PUBLIC METHODS\n    open() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.log('open');\n            this.isOpen = true;\n            this.repo.addListener(this.onDocChanged.bind(this));\n            yield this.sendHello();\n        });\n    }\n    close() {\n        this.log('close');\n        this.isOpen = false;\n        this.repo.removeListener(this.onDocChanged.bind(this));\n    }\n    /** Called by the network stack whenever it receives a message from a peer */\n    receive(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isOpen)\n                return; // don't respond to messages after closing\n            this.log('receive', msg);\n            switch (msg.type) {\n                case message.HELLO: {\n                    // they are introducing themselves by saying how many documents they have\n                    const theirCount = +msg.documentCount;\n                    const ourCount = +this.repo.count;\n                    this.log('received hello ', { theirCount, ourCount });\n                    if (theirCount === 0 && ourCount === 0) {\n                        // neither of us has anything, nothing to talk about until we get documents\n                        this.log('nothing to do');\n                    }\n                    else if (theirCount === 0 && ourCount > 0) {\n                        // we have documents and they have none, so let's send them everything we have\n                        this.log('sending everything');\n                        this.sendSnapshots();\n                        this.sendHistory();\n                    }\n                    else {\n                        // we both have some documents, so we'll each advertise everything we have\n                        this.log('advertising everything');\n                        yield this.advertiseAll();\n                    }\n                    break;\n                }\n                case message.SEND_CHANGES: {\n                    // they are sending us changes that they figure we don't have\n                    const { documentId, changes, clock: theirClock } = msg;\n                    this.updateTheirClock(documentId, theirClock);\n                    const ourClock = this.getOurClock(documentId);\n                    // does this message contain new changes?\n                    const shouldUpdate = clocks_1.isMoreRecent(theirClock, ourClock);\n                    // if so apply their changes\n                    if (shouldUpdate)\n                        yield this.repo.applyChanges(documentId, changes);\n                    break;\n                }\n                case message.ADVERTISE_DOCS: {\n                    // they are letting us know they have this specific version of each of these docs\n                    const { clocks } = msg;\n                    for (const { documentId, clock } of clocks) {\n                        this.updateTheirClock(documentId, clock);\n                        // we have the document as well; see if we have a more recent version than they do;\n                        // if so, send them the changes they're missing\n                        if (this.repo.has(documentId))\n                            yield this.maybeSendChanges(documentId);\n                        // we don't have this document at all; ask for it\n                        else\n                            this.requestDoc(documentId);\n                    }\n                    break;\n                }\n                case message.REQUEST_DOCS: {\n                    // they don't have this document and are asking for this document in its entirety\n                    const { documentIds } = msg;\n                    for (const documentId of documentIds) {\n                        this.updateTheirClock(documentId, clocks_1.EMPTY_CLOCK);\n                        // send them what we have\n                        yield this.maybeSendChanges(documentId);\n                    }\n                    break;\n                }\n                case message.SEND_HISTORY: {\n                    // they are sending us the complete history of all documents\n                    const { history } = msg;\n                    yield this.receiveHistory(history);\n                    break;\n                }\n                case message.SEND_SNAPSHOTS: {\n                    // they are sending us the latest snapshots for all documents\n                    const { state, clocks } = msg;\n                    this.receiveSnapshots(state, clocks);\n                    break;\n                }\n            }\n        });\n    }\n    // PRIVATE METHODS\n    /** Event listener that fires when any document is modified on the repo */\n    onDocChanged(documentId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // send the document if peer doesn't have it or has an older version\n            yield this.maybeSendChanges(documentId);\n        });\n    }\n    /** Sends a hello message including our document count */\n    sendHello() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const documentCount = this.repo.count;\n            this.log('sending hello', documentCount);\n            this.send({ type: message.HELLO, documentCount }, true /*forcePlaintext*/);\n        });\n    }\n    /** Checks whether we have more recent information than they do; if so, sends changes */\n    maybeSendChanges(documentId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const theirClock = this.getTheirClock(documentId);\n            const ourClock = this.getOurClock(documentId);\n            if (clocks_1.isMoreRecent(ourClock, theirClock)) {\n                const ourDoc = yield this.repo.get(documentId);\n                if (ourDoc === undefined)\n                    return;\n                const changes = theirClock\n                    ? clocks_1.getMissingChanges(ourDoc, theirClock)\n                    : automerge_1.default.getChanges(automerge_1.default.init(), ourDoc);\n                if (changes.length > 0)\n                    yield this.sendChanges(documentId, changes);\n            }\n        });\n    }\n    /** Sends a changeset to our peer, bringing them up to date with our latest info */\n    sendChanges(documentId, changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.log('sendChanges', documentId);\n            const clock = this.getOurClock(documentId);\n            this.send({ type: message.SEND_CHANGES, documentId, clock, changes });\n        });\n    }\n    /** Sends a single message containing each documentId along with our clock value for it */\n    advertiseAll() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.log('advertiseAll');\n            const clocks = Object.keys(this.repo.getAllClocks()).map((documentId) => ({\n                documentId,\n                clock: this.getOurClock(documentId),\n            }));\n            this.send({ type: message.ADVERTISE_DOCS, clocks });\n        });\n    }\n    /** Requests a document that we don't have, indicating that we need its entire history */\n    requestDoc(documentId) {\n        this.send({ type: message.REQUEST_DOCS, documentIds: [documentId] });\n    }\n    /** Send snapshots for all documents */\n    sendSnapshots() {\n        const state = this.repo.getState();\n        const clocks = this.repo.getAllClocks();\n        this.log('sendSnapshots', state);\n        this.send({ type: message.SEND_SNAPSHOTS, state, clocks });\n    }\n    /** Send all changes for all documents (for initialization) */\n    sendHistory() {\n        var e_1, _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                for (var _b = __asyncValues(this.repo.getHistory(1000)), _c; _c = yield _b.next(), !_c.done;) {\n                    const batch = _c.value;\n                    this.log('sendHistory', Object.keys(batch).length);\n                    this.send({ type: message.SEND_HISTORY, history: batch });\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        });\n    }\n    /** Load a history of all changes sent by peer */\n    receiveHistory(history) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.log('receiveHistory', history);\n            yield this.repo.loadHistory(history);\n        });\n    }\n    /** Load a snapshot of the entire repo */\n    receiveSnapshots(state, clocks) {\n        this.log('receiveSnapshots', state);\n        this.repo.setState(state);\n        for (const documentId in clocks)\n            this.updateTheirClock(documentId, clocks[documentId]);\n    }\n    /** Updates their vector clock by merging in the new vector clock `clock`, setting each node's\n     * sequence number to the maximum for that node */\n    updateTheirClock(documentId, newClock) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const oldClock = this.theirClock[documentId] || clocks_1.EMPTY_CLOCK;\n            this.theirClock[documentId] = clocks_1.mergeClocks(oldClock, newClock);\n        });\n    }\n}\nexports.Synchronizer = Synchronizer;\n//# sourceMappingURL=Synchronizer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SEND_SNAPSHOTS = exports.SEND_HISTORY = exports.SEND_CHANGES = exports.ADVERTISE_DOCS = exports.REQUEST_DOCS = exports.HELLO = void 0;\n/** Kick off our interaction with a peer by telling them how many documents we have */\nexports.HELLO = 'HELLO';\n/** Request a document we don't have (snapshot and changes) */\nexports.REQUEST_DOCS = 'REQUEST_DOCS';\n/** Advertise new document */\nexports.ADVERTISE_DOCS = 'ADVERTISE_DOCS';\n/** Send requested changes for a document */\nexports.SEND_CHANGES = 'SEND_CHANGES';\n/** Send all changes for all documents (for initialization) */\nexports.SEND_HISTORY = 'SEND_HISTORY';\n/** Send snapshots for all documents */\nexports.SEND_SNAPSHOTS = 'SEND_SNAPSHOTS';\n//# sourceMappingURL=Message.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMiddleware = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst constants_1 = require(\"./constants\");\nconst toArray_1 = require(\"./toArray\");\nconst log = debug_1.default('lf:middleware');\nconst getMiddleware = (repo, proxyReducer) => {\n    return (store) => (next) => (action) => __awaiter(void 0, void 0, void 0, function* () {\n        // BEFORE CHANGES\n        // ... nothing to do here\n        // MAKE CHANGES\n        const newState = next(action);\n        // AFTER CHANGES\n        log('%o', { action });\n        if (action.type === constants_1.RECEIVE_MESSAGE_FROM_PEER) {\n            // Synchronizer has already updated our repo - nothing to do here\n        }\n        else {\n            const reducerOutput = proxyReducer(store.getState(), action);\n            // The reducer has already applied changes synchronously to repo snapshots. Here we persist\n            // the Automerge changes, which will also trigger synchronization with any peers we're\n            // connected to.\n            if (reducerOutput === null) {\n                // Nothing for us to do (could be an action handled elsewhere)\n            }\n            else {\n                // Apply changes to Repo history asynchronously\n                for (const changeManifest of toArray_1.toArray(reducerOutput))\n                    yield repo.applyChangeManifest(changeManifest);\n            }\n        }\n        return newState;\n    });\n};\nexports.getMiddleware = getMiddleware;\n//# sourceMappingURL=getMiddleware.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getReducer = void 0;\nconst constants_1 = require(\"./constants\");\nconst toArray_1 = require(\"./toArray\");\n/**\n * This function, used when wiring up the store, takes a `proxyReducer` and turns it into a\n * garden-variety Redux reducer.\n *\n * When we initialize a `StoreManager`, we give it a `proxyReducer`, which is like a Redux reducer,\n * except it's designed to work with Automerge objects instead of plain JavaScript objects. It takes\n * a state, but instead of returning a modified state, it returns one or more change functions.\n *\n * @param proxyReducer The proxyReducer to be converted\n * @param repo The store's repo\n */\nconst getReducer = (proxyReducer, repo) => {\n    const reducer = (state, action) => {\n        if (action.type === constants_1.RECEIVE_MESSAGE_FROM_PEER) {\n            // Synchronizer has already updated our repo - nothing to do here.\n        }\n        else {\n            const reducerOutput = proxyReducer(state, action);\n            // Here we apply changes synchronously to repo snapshots, so the user gets immediate\n            // feedback. In `getMiddleware` we will persist the Automerge changes, which will also\n            // trigger synchronization with any peers we're connected to.\n            if (reducerOutput === null) {\n                // Nothing for us to do (could be an action handled elsewhere)\n            }\n            else {\n                // Replace all snapshots in the repo with the state we're given\n                repo.setState(state || {});\n                // Update snapshots synchronously\n                const snapshotOnly = true;\n                for (const changeManifest of toArray_1.toArray(reducerOutput))\n                    repo.applyChangeManifest(changeManifest, snapshotOnly);\n            }\n        }\n        return repo.getState();\n    };\n    return reducer;\n};\nexports.getReducer = getReducer;\n//# sourceMappingURL=getReducer.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Repo = void 0;\nconst relay_client_1 = require(\"@localfirst/relay-client\");\nconst storage_indexeddb_1 = require(\"@localfirst/storage-indexeddb\");\nconst automerge_1 = __importDefault(require(\"automerge\"));\nconst debug_1 = __importDefault(require(\"debug\"));\nconst ramda_1 = require(\"ramda\");\nconst clocks_1 = require(\"./clocks\");\nconst Collection_1 = require(\"./Collection\");\nconst constants_1 = require(\"./constants\");\nconst types_1 = require(\"./types\");\n/**\n * A Repo manages a set of Automerge documents. For each document, it persists:\n *   1. the document history (in an append-only log of changes), and\n *   2. a snapshot of the document's latest state.\n *\n * Each repo is uniquely identified by a discovery key.\n *\n * A repo is instantiated by StoreManager when creating or joining a store. Actions coming from the\n * store are passed onto the repo, as are changes received from peers.\n */\nclass Repo {\n    constructor({ discoveryKey, databaseName, clientId = relay_client_1.newid(), storage = new storage_indexeddb_1.IdbAdapter({ databaseName, discoveryKey }), collections = [], }) {\n        /** In-memory map of document snapshots */\n        this.state = {};\n        /** In-memory map of document clocks */\n        this.clock = {};\n        /** Document change event listeners. Each listener fires every time a document is set or removed. */\n        this.listeners = new Set();\n        // PUBLIC METHODS\n        this.open = () => __awaiter(this, void 0, void 0, function* () { return yield this.storage.open(); });\n        this.close = () => __awaiter(this, void 0, void 0, function* () { return yield this.storage.close(); });\n        this.log = debug_1.default(`lf:repo:${databaseName}`);\n        this.databaseName = databaseName;\n        this.clientId = clientId;\n        this.collections = collections;\n        this.storage = storage;\n    }\n    /**\n     * Initializes the repo and returns a snapshot of its current state.\n     * @param initialState The starting state to use when creating a new repo.\n     * @param create Use `true` if creating a new repo, `false` if joining an existing repo (one\n     * that we already created locally, or that a peer has)\n     * @returns A snapshot of the repo's current state.\n     */\n    init(initialState, create) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.open();\n            const hasData = yield this.hasData();\n            if (create) {\n                yield this.create(initialState);\n            }\n            else if (!hasData) {\n                this.log(`joining a peer's document for the first time`);\n                // we'll get data from connection\n            }\n            else {\n                yield this.load();\n            }\n            return this.getState();\n        });\n    }\n    /** @returns true if this repo has this document (even if it's been deleted) */\n    has(documentId) {\n        // if the document has been deleted, its snapshot set to `null`, but the map still contains the entry\n        return this.state.hasOwnProperty(documentId);\n    }\n    /** Returns the number of document IDs that this repo has (including deleted) */\n    get count() {\n        return this.ids.length;\n    }\n    /** Reconstitutes an Automerge document from its change history  */\n    get(documentId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.reconstruct(documentId);\n        });\n    }\n    /**\n     * Saves the document's change history and snapshot, and updates our in-memory state.\n     * @param documentId The ID of the document\n     * @param doc The new version of the document\n     * @param changes (optional) If we're already given the changes (e.g. in `applyChanges`), we can\n     * pass them in so we don't have to recalculate them.\n     */\n    set(documentId, doc, changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // look up old doc and generate diff\n            if (!changes) {\n                const oldDoc = (yield this.reconstruct(documentId)) || automerge_1.default.init();\n                try {\n                    changes = automerge_1.default.getChanges(oldDoc, doc);\n                }\n                catch (error) {\n                    this.log({ error, oldDoc, doc });\n                    changes = [];\n                }\n            }\n            // only if Automerge actually found changes in the new document...\n            if (changes.length > 0) {\n                // append changes to this document's history\n                yield this.appendChanges({ documentId, changes });\n                // save snapshot\n                yield this.saveSnapshot(documentId, doc);\n                // call listeners\n                for (const fn of this.listeners)\n                    yield fn(documentId, doc);\n            }\n        });\n    }\n    /**\n     * Updates a document using an Automerge change function (e.g. from a reducer)\n     * @param documentId The ID of the document\n     * @param changeFn An Automerge change function\n     * @returns The updated document\n     */\n    change(documentId, changeFn, { collectionName, snapshotOnly = false, } = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = collectionName ? new Collection_1.Collection(collectionName).idToKey(documentId) : documentId;\n            if (snapshotOnly) {\n                // create a new throw-away automerge object from the current version's snapshot\n                const oldDoc = automerge_1.default.from(ramda_1.clone(this.getSnapshot(key) || {}));\n                // apply the change\n                const newDoc = automerge_1.default.change(oldDoc, changeFn);\n                // convert the result back to a plain object\n                const snapshot = ramda_1.clone(newDoc);\n                this.setSnapshot(key, snapshot);\n            }\n            else {\n                // apply changes to document\n                const oldDoc = (yield this.reconstruct(key)) || automerge_1.default.init();\n                const newDoc = automerge_1.default.change(oldDoc, changeFn);\n                // save the new document, snapshot, etc.\n                yield this.set(key, newDoc);\n            }\n        });\n    }\n    /**\n     * Updates a document using a set of Automerge changes (typically received from a peer).\n     * @param documentId The ID of the document\n     * @param changes A diff in the form of an array of Automerge change objects\n     * @returns The updated document\n     */\n    applyChanges(documentId, changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // apply changes to document\n            const doc = (yield this.reconstruct(documentId)) || automerge_1.default.init();\n            const newDoc = automerge_1.default.applyChanges(doc, changes);\n            yield this.set(documentId, newDoc, changes);\n            // return the modified document\n            return newDoc;\n        });\n    }\n    /**\n     * Marks all documents belonging to the given collection as deleted\n     * @param collectionName The name of the collection (e.g. `widgets`)\n     */\n    drop(collectionName, snapshotOnly = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const isInCollection = (k) => new Collection_1.Collection(collectionName).isCollectionKey(k);\n            for (const documentId of this.ids.filter(isInCollection))\n                if (snapshotOnly)\n                    this.deleteSnapshot(documentId);\n                else\n                    yield this.change(documentId, setDeleteFlag);\n        });\n    }\n    /**\n     * Updates a document from a change manifest. This is called either\n     * - from a reducer (in which case `snapshotOnly` will be true and this will happen\n     *   synchronously); or\n     * - from middleware (in which case `snapshotOnly` will be false and this will happen\n     *   asynchronously).\n     * @param cm The ChangeManifest contains information about what needs to change. Can be:\n     * - a function that is applied to the GLOBAL document\n     * - an object containing a function, along with the name of the collection and the id of the\n     *   document to apply it to\n     * - an object containing the name of a collection, and id, and a `delete` flag, indicating that\n     *   the item should be deleted\n     * - an object containing the name of a collection and a `drop` flag, indicating that the\n     *   collection should be dropped\n     * @param snapshotOnly Indicates whether the changes should be made to snapshots (synchronously),\n     * or to the change history (asynchronously)\n     */\n    applyChangeManifest(cm, snapshotOnly = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (types_1.isDropFlag(cm)) {\n                yield this.drop(cm.collection, snapshotOnly);\n            }\n            else {\n                const fn = types_1.isFunction(cm)\n                    ? cm // global change function\n                    : types_1.isDeleteFlag(cm)\n                        ? setDeleteFlag // delete function\n                        : cm.fn; // collection item change function\n                const id = types_1.isFunction(cm)\n                    ? constants_1.GLOBAL // global id\n                    : cm.id; // collection item id\n                const collectionName = types_1.isFunction(cm)\n                    ? undefined // global\n                    : cm.collection; // collection name\n                yield this.change(id, fn, { collectionName, snapshotOnly });\n            }\n        });\n    }\n    /**\n     * Used for sending the entire current state of the repo to a new peer.\n     * @batchSize The number of items to send at once\n     * @returns  an object mapping documentIds to an array of changes.\n     */\n    getHistory(batchSize = 1000) {\n        return __asyncGenerator(this, arguments, function* getHistory_1() {\n            var e_1, _a;\n            let history = {};\n            let i = 0;\n            try {\n                for (var _b = __asyncValues(this.storage.changes()), _c; _c = yield __await(_b.next()), !_c.done;) {\n                    const { documentId, changes } = _c.value;\n                    history[documentId] = (history[documentId] || []).concat(changes);\n                    if (i++ > batchSize) {\n                        yield yield __await(history);\n                        i = 0;\n                        history = {};\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) yield __await(_a.call(_b));\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            yield yield __await(history);\n        });\n    }\n    /** Used when receiving the entire current state of a repo from a peer. */\n    loadHistory(history) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const documentId in history) {\n                const changes = history[documentId];\n                yield this.applyChanges(documentId, changes);\n            }\n        });\n    }\n    // SNAPSHOTS\n    /**\n     * Gets the in-memory snapshot of a document\n     * @param documentId\n     * @returns  a plain JS object\n     */\n    getSnapshot(documentId) {\n        return this.state[documentId];\n    }\n    /**\n     * Sets the in-memory snapshot of a document.\n     * > NOTE: This does not update the document's change history or persist anything; it's just to\n     * allow synchronous updates of the state for UI purposes.\n     * @param documentId\n     * @param snapshot\n     */\n    setSnapshot(documentId, snapshot) {\n        if (snapshot.DELETED)\n            this.deleteSnapshot(documentId);\n        else\n            this.state[documentId] = snapshot;\n    }\n    /**\n     * Removes the snapshot with the given `documentId` from in-memory state. (More precisely, sets it\n     * to `null`, so we don't forget that we've seen the document before.)\n     * @param documentId\n     */\n    deleteSnapshot(documentId) {\n        this.state[documentId] = null;\n    }\n    /** Returns the state of the entire repo, containing snapshots of all the documents. */\n    getState() {\n        return Collection_1.Collection.denormalize(this.state, this.collections);\n    }\n    /**\n     * Replaces the (snapshot) state of the entire repo.\n     * > NOTE: This doesn't update the repo's change history or persist anything; this is only used\n     * for synchronous updates of the state for UI purposes.\n     */\n    setState(state) {\n        this.state = Object.assign(this.state, state);\n    }\n    // CLOCKS\n    /**\n     * Accessor for a document's clock\n     * @param documentId\n     * @returns Our clock, or if none exists, an empty clock\n     */\n    getClock(documentId) {\n        return this.clock[documentId] || clocks_1.EMPTY_CLOCK;\n    }\n    /** Returns our entire ClockMap as-is */\n    getAllClocks() {\n        return this.clock;\n    }\n    /**\n     * Updates the vector clock by merging in the new vector clock `clock`, setting each node's\n     * sequence number to the maximum for that node\n     * @param documentId\n     * @param newClock\n     */\n    updateClock(documentId, newClock) {\n        const oldClock = this.clock[documentId];\n        this.clock[documentId] = clocks_1.mergeClocks(oldClock, newClock);\n    }\n    // LISTENERS\n    /** Adds a change event listener */\n    addListener(listener) {\n        this.listeners.add(listener);\n    }\n    /** Removes a change event listener */\n    removeListener(listener) {\n        this.listeners.delete(listener);\n    }\n    // PRIVATE METHODS\n    get ids() {\n        return Object.keys(this.state);\n    }\n    /** @returns `true` if there is any stored data in the repo. */\n    hasData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.storage.hasData();\n        });\n    }\n    /** Takes a (denormalized) initial state, and creates a new repo  */\n    create(initialState) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.log('creating a new repo from initial state');\n            const normalizedState = Collection_1.Collection.normalize(initialState, this.collections);\n            for (let documentId in normalizedState) {\n                const snapshot = normalizedState[documentId];\n                if (snapshot !== null) {\n                    const document = automerge_1.default.from(snapshot);\n                    yield this.set(documentId, document);\n                }\n            }\n        });\n    }\n    /** Loads all the repo's snapshots and clocks into memory */\n    load() {\n        var e_2, _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            this.log('recovering an existing repo from persisted state');\n            try {\n                // TODO: only problem with this approach is that we're not storing clocks for deleted documents\n                for (var _b = __asyncValues(this.storage.snapshots()), _c; _c = yield _b.next(), !_c.done;) {\n                    const { documentId, snapshot, clock } = _c.value;\n                    this.state[documentId] = snapshot[constants_1.DELETED] ? null : snapshot;\n                    this.clock[documentId] = clock;\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        });\n    }\n    /** Recreates an Automerge document from its change history */\n    reconstruct(documentId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.has(documentId))\n                return undefined;\n            let doc = automerge_1.default.init({ actorId: this.clientId });\n            const changeSets = yield this.getChanges(documentId);\n            for (const { changes } of changeSets) //\n                if (changes)\n                    doc = automerge_1.default.applyChanges(doc, changes);\n            return doc;\n        });\n    }\n    /** Adds a set of changes to the document's append-only history. */\n    appendChanges(changeSet) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.storage.appendChanges(changeSet);\n        });\n    }\n    /**\n     * Gets all stored changesets from a document's history.\n     * @param documentId The ID of the requested document.\n     * @returns An array of changesets in order of application.\n     */\n    getChanges(documentId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.storage.getChanges(documentId);\n        });\n    }\n    /** Saves the snapshot for the given `documentId`, replacing any existing snapshot. */\n    saveSnapshot(documentId, document) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const snapshot = ramda_1.clone(document);\n            const clock = clocks_1.getClock(document);\n            this.updateClock(documentId, clock);\n            if (snapshot[constants_1.DELETED]) {\n                this.deleteSnapshot(documentId);\n                yield this.storage.deleteSnapshot(documentId);\n            }\n            else {\n                this.setSnapshot(documentId, snapshot);\n                yield this.storage.putSnapshot({ documentId, snapshot, clock });\n            }\n        });\n    }\n}\nexports.Repo = Repo;\nconst setDeleteFlag = (s) => Object.assign(s || {}, { [constants_1.DELETED]: true });\n//# sourceMappingURL=Repo.js.map","\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Button = void 0;\nconst jsx_runtime_1 = require(\"@emotion/react/jsx-runtime\");\nconst Button = (_a) => {\n    var { children, className } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (jsx_runtime_1.jsx(\"button\", Object.assign({ role: \"button\", type: \"button\", className: `block py-2 px-4  \n        font-mono text-sm leading-none uppercase text-gray-900 \n        bg-white hover:bg-blue-100 \n        rounded-md border border-gray-400 focus:outline-none focus:border-blue-500\n        cursor-pointer \n        ${className}` }, props, { children: children }), void 0));\n};\nexports.Button = Button;\n//# sourceMappingURL=Button.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Collection = void 0;\nconst constants_1 = require(\"./constants\");\n/**\n * @param name The name of the collection.\n * @param idField The property of an object containing a unique identifier, normally a uuid.\n * Optional; defaults to 'id'.\n */\nclass Collection {\n    constructor(name) {\n        // these are for converting individual item IDs back and forth\n        this.idToKey = (id) => `${this.keyName}__${id}`;\n        this.keyToId = (key) => key.replace(`${this.keyName}__`, '');\n        this.name = name;\n        this.keyName = Collection.getKeyName(name);\n    }\n    /**\n     * Returns true if the given string is a key for this collection\n     * @param maybeKey\n     */\n    isCollectionKey(maybeKey) {\n        return maybeKey.startsWith(`${this.keyName}__`);\n    }\n    /**\n     * Iterates over all keys for the collection when given the current redux state.\n     * @param state The plain JSON representation of the state.\n     */\n    *keys(state = {}) {\n        for (const key in state) {\n            const item = state[key];\n            const shouldInclude = item && !item[constants_1.DELETED];\n            if (this.isCollectionKey(key) && shouldInclude)\n                yield key;\n        }\n    }\n    /**\n     * Given the collection's name, returns the `keyName` used internally for tracking the collection.\n     *\n     * @param {string} collectionName The collection name, e.g. `teachers`\n     * @return The key name used internally for the collection (e.g. `__teachers`)\n     */\n    static getKeyName(collectionName) {\n        return `__${collectionName}`;\n    }\n    /**\n     * Given a collection's `keyName`, returns the collection's name.\n     *\n     * @param {string} keyName The key name used internally for the collection (e.g. `__teachers`)\n     * @return The collection name, e.g. `teachers`\n     */\n    static getCollectionName(keyName) {\n        return keyName.replace(/^__/, '');\n    }\n    /**\n     * Normalizes a state object into a map of objects that can be turned into Automerge documents.\n     *\n     * This is intended to solve two problems:\n     *\n     * 1. Automerge's overhead makes it inefficient to deal with very large arrays (over 10,000 or so\n     *    elements), so we treat these as collections and create one document per element.\n     * 2. Scalars and arrays can't be turned into Automerge documents; so we gather any non-collection\n     *    elements from the root and store them in a special \"global\" document.\n     *\n     * For example:\n     *\n     * ```js\n     * // denormalized state (exposed to application)\n     * {\n     *   visibilityFilter: 'all',\n     *   todos: {\n     *     abc123: {},\n     *     qrs666: {},\n     *   },\n     * }\n     *\n     * // normalized state (for storage)\n     * {\n     *   __global: { visibilityFilter: 'all' }, // 🡐 Automerge doc\n     *   __todos__abc123: {}, // 🡐 Automerge doc\n     *   __todos__qrs666: {}, // 🡐 Automerge doc\n     * }\n     *```\n     * @see denormalize\n     * @param state The object to be normalized.\n     * @param collections An array containing the names of all elements in `state` to be treated as\n     * collections.\n     * @returns the normalized state\n     */\n    static normalize(state, collections) {\n        const _state = Object.assign({}, state); // shallow clone\n        let normalizedState = {};\n        // First, we handle collections.\n        for (const c of collections) {\n            const collectionElements = _state[c]; // e.g. state.todos\n            for (const id in collectionElements) {\n                const key = new Collection(c).idToKey(id); // e.g. abc123 => __todos__abc123\n                normalizedState[key] = collectionElements[id];\n            }\n            // remove the original collection object, so only non-collection elements are left\n            delete _state[c];\n        }\n        // put everything else in a global document\n        normalizedState[constants_1.GLOBAL] = Object.assign({}, _state);\n        return normalizedState;\n    }\n    /**\n     * Reverses the operation of `normalize`.\n     * @see normalize\n     * @param state The normalized state to denormalize\n     * @param collections An array containing the names of all collections used in normalizing `state`.\n     */\n    static denormalize(state, collections) {\n        // get everything from the global document\n        const denormalizedState = Object.assign({}, state[constants_1.GLOBAL]);\n        // add each collection\n        for (const c of collections) {\n            const denormalizedMap = {};\n            const collection = new Collection(c);\n            for (const key of collection.keys(state)) {\n                const id = collection.keyToId(key);\n                if (state[key] && state[key][constants_1.DELETED] !== true) {\n                    denormalizedMap[id] = state[key];\n                }\n            }\n            denormalizedState[c] = denormalizedMap;\n        }\n        return denormalizedState;\n    }\n}\nexports.Collection = Collection;\n//# sourceMappingURL=Collection.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StatusLight = void 0;\nconst jsx_runtime_1 = require(\"@emotion/react/jsx-runtime\");\n/** @jsxImportSource @emotion/react */\nconst StatusLight = ({ online }) => (jsx_runtime_1.jsx(\"div\", Object.assign({ css: styles(online).statusLight }, { children: jsx_runtime_1.jsx(\"span\", {}, void 0) }), void 0));\nexports.StatusLight = StatusLight;\nconst styles = (online) => ({\n    statusLight: {\n        display: 'inline-block',\n        span: {\n            display: 'block',\n            width: 10,\n            height: 10,\n            borderRadius: '50%',\n            border: '1px solid white',\n            background: online ? 'green' : 'silver',\n        },\n    },\n});\n//# sourceMappingURL=StatusLight.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TeamDropdown = void 0;\nconst jsx_runtime_1 = require(\"@emotion/react/jsx-runtime\");\n/** @jsxImportSource @emotion/react */\nconst Button_1 = require(\"./Button\");\nconst DropdownWrapper_1 = require(\"./DropdownWrapper\");\nconst Group_1 = require(\"./Group\");\nconst Item_1 = require(\"./Item\");\nconst TeamDropdown = () => {\n    return (jsx_runtime_1.jsx(Group_1.Group, { children: jsx_runtime_1.jsxs(DropdownWrapper_1.DropdownWrapper, Object.assign({ buttonText: \"\\uD83D\\uDC6A Team\", disabled: false }, { children: [jsx_runtime_1.jsx(\"div\", Object.assign({ className: \"py-2 px-4\" }, { children: jsx_runtime_1.jsx(\"h3\", Object.assign({ className: \"font-bold\" }, { children: \"3 members\" }), void 0) }), void 0),\n                jsx_runtime_1.jsx(Item_1.Item, { children: \"funny.coyote \\uD83D\\uDC51\" }, void 0),\n                jsx_runtime_1.jsx(Item_1.Item, { children: \"little.snake\" }, void 0),\n                jsx_runtime_1.jsx(Item_1.Item, { children: \"mysterious.mongoose\" }, void 0),\n                jsx_runtime_1.jsx(\"div\", Object.assign({ className: \"py-2 px-4\" }, { children: jsx_runtime_1.jsx(Button_1.Button, { children: \"\\u2709 Invite\" }, void 0) }), void 0)] }), void 0) }, void 0));\n};\nexports.TeamDropdown = TeamDropdown;\n//# sourceMappingURL=TeamDropdown.js.map","\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Item = void 0;\nconst jsx_runtime_1 = require(\"@emotion/react/jsx-runtime\");\nconst Button_1 = require(\"./Button\");\nconst Item = (_a) => {\n    var { children, className } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (jsx_runtime_1.jsx(Button_1.Button, Object.assign({ className: [\n            'block ml-0 mr-0',\n            'w-full',\n            'text-left normal-case',\n            // reset borders\n            'rounded-t-none rounded-r-none rounded-b-none rounded-l-none ',\n            'border-t-0 border-r-0 border-b-0 border-l-0',\n            className,\n        ].join(' ') }, props, { children: children }), void 0));\n};\nexports.Item = Item;\n//# sourceMappingURL=Item.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WelcomeMessage = void 0;\nconst jsx_runtime_1 = require(\"@emotion/react/jsx-runtime\");\n/** @jsxImportSource @emotion/react */\nconst Group_1 = require(\"./Group\");\nconst WelcomeMessage = ({ name }) => {\n    return (jsx_runtime_1.jsx(Group_1.Group, { children: jsx_runtime_1.jsxs(\"label\", { children: [\"Welcome, \", name, \"!\"] }, void 0) }, void 0));\n};\nexports.WelcomeMessage = WelcomeMessage;\n//# sourceMappingURL=WelcomeMessage.js.map","import { v4 as uuid } from 'uuid'\nimport { VisibilityFilter } from '../types'\n\nexport enum ActionType {\n  ADD_TODO = 'ADD_TODO',\n  TOGGLE_TODO = 'TOGGLE_TODO',\n  EDIT_TODO = 'EDIT_TODO',\n  DESTROY_TODO = 'DESTROY_TODO',\n  SET_FILTER = 'SET_FILTER',\n  CLEAR_COMPLETED = 'CLEAR_COMPLETED',\n}\n\nexport const actions = {\n  addTodo: (content: string) => ({\n    type: ActionType.ADD_TODO,\n    payload: { content, id: uuid() },\n  }),\n\n  toggleTodo: (id: string) => ({\n    type: ActionType.TOGGLE_TODO,\n    payload: { id },\n  }),\n\n  editTodo: (id: string, content: string) => ({\n    type: ActionType.EDIT_TODO,\n    payload: { id, content },\n  }),\n\n  destroyTodo: (id: string) => ({\n    type: ActionType.DESTROY_TODO,\n    payload: { id },\n  }),\n\n  setFilter: (filter: VisibilityFilter) => ({\n    type: ActionType.SET_FILTER, //\n    payload: { filter },\n  }),\n\n  clearCompleted: () => ({\n    type: ActionType.CLEAR_COMPLETED, //\n    payload: {},\n  }),\n}\n","import { ActionType } from './redux/actions'\n\nexport interface Todo {\n  id: string\n  content: string\n  completed: boolean\n}\n\nexport interface Action {\n  type: ActionType\n  payload: any\n}\n\nexport interface State {\n  todoList: string[]\n  todoMap: { [id: string]: Todo }\n  visibilityFilter: VisibilityFilter\n}\n\nexport enum VisibilityFilter {\n  ALL = 'All',\n  INCOMPLETE = 'Active',\n  COMPLETED = 'Completed',\n}\n\nexport type VisibilityFilterKey = keyof typeof VisibilityFilter\n","import React, { useRef, FormEventHandler } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { actions } from '../redux/actions'\n\nexport const AddTodo = () => {\n  // input.current will contain a reference to the new todo input field\n  const input = useRef<HTMLInputElement>() as React.RefObject<HTMLInputElement>\n\n  const dispatch = useDispatch()\n\n  const save: FormEventHandler<HTMLFormElement> = e => {\n    // don't post back\n    e.preventDefault()\n    if (input && input.current) {\n      const newText = input.current.value.trim()\n      // don't create empty todos\n      if (newText.length === 0) return\n      // update state with new todo\n      dispatch(actions.addTodo(newText))\n      // clear input\n      input.current.value = ''\n    }\n  }\n\n  return (\n    <div>\n      <form onSubmit={save}>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          ref={input}\n          autoFocus={true}\n        />\n      </form>\n    </div>\n  )\n}\n","import { objects, predicates } from 'friendly-words'\n\nconst randomElement = (arr: string[]) => arr[Math.floor(Math.random() * arr.length)]\n\nconst discoveryKeyParts = [predicates, objects]\nexport const randomDiscoveryKey = (): string => discoveryKeyParts.map(randomElement).join('-')\n\nconst userNameParts = [\n  [\n    'admirable',\n    'admiral',\n    'baron',\n    'baroness',\n    'brave',\n    'captain',\n    'charming',\n    'chatty',\n    'clever',\n    'colonel',\n    'commander',\n    'corporal',\n    'countess',\n    'dame',\n    'delightful',\n    'detective',\n    'doctor',\n    'duke',\n    'eccentric',\n    'efficient',\n    'elusive',\n    'entertaining',\n    'excellent',\n    'friendly',\n    'funky',\n    'funny',\n    'general',\n    'hilarious',\n    'lady',\n    'lieutenant',\n    'little',\n    'lovely',\n    'madam',\n    'major',\n    'miss',\n    'missus',\n    'mister',\n    'mistress',\n    'monsieur',\n    'mysterious',\n    'nervous',\n    'old',\n    'president',\n    'professor',\n    'remarkable',\n    'reverend',\n    'senator',\n    'señor',\n    'señora',\n    'sergeant',\n    'strange',\n    'sweet',\n    'tame',\n    'trustworthy',\n    'viscount',\n    'wise',\n  ],\n  [\n    'aardvark',\n    'aardwolf',\n    'abalone',\n    'albacore',\n    'albatross',\n    'alewife',\n    'alligator',\n    'alpaca',\n    'anaconda',\n    'anchovy',\n    'angelfish',\n    'angler',\n    'ant',\n    'anteater',\n    'antelope',\n    'ape',\n    'aphid',\n    'armadillo',\n    'baboon',\n    'badger',\n    'bandicoot',\n    'barnacle',\n    'barracuda',\n    'bat',\n    'bear',\n    'beaver',\n    'bedbug',\n    'beetle',\n    'beluga',\n    'bison',\n    'blackbird',\n    'bluebeetle',\n    'bluebird',\n    'bluebottle',\n    'bluejay',\n    'boar',\n    'bobcat',\n    'bowerbird',\n    'bowfin',\n    'bowhead',\n    'boxfish',\n    'bristletail',\n    'buffalo',\n    'bullfinch',\n    'bullfrog',\n    'bumblebee',\n    'bushbaby',\n    'butterfly',\n    'buzzard',\n    'caiman',\n    'camel',\n    'canary',\n    'capuchin',\n    'capybara',\n    'cardinal',\n    'caribou',\n    'caterpillar',\n    'catfish',\n    'cavefish',\n    'centipede',\n    'chameleon',\n    'cheetah',\n    'chickadee',\n    'chicken',\n    'chickenhawk',\n    'chimpanzee',\n    'chinchilla',\n    'chipmunk',\n    'cobra',\n    'cockatoo',\n    'condor',\n    'copperhead',\n    'cormorant',\n    'cowbird',\n    'cowfish',\n    'coyote',\n    'crayfish',\n    'cricket',\n    'crocodile',\n    'dingo',\n    'puppydog',\n    'kittycat',\n    'bunnyrabbit',\n    'dogfish',\n    'dolphin',\n    'donkey',\n    'dragonfly',\n    'eagle',\n    'earthworm',\n    'egret',\n    'eland',\n    'elephant',\n    'elk',\n    'falcon',\n    'ferret',\n    'firefly',\n    'flamingo',\n    'flatworm',\n    'flicker',\n    'flounder',\n    'flycatcher',\n    'frog',\n    'fruitfly',\n    'gazelle',\n    'gecko',\n    'gerbil',\n    'gibbon',\n    'giraffe',\n    'gnatcatcher',\n    'goat',\n    'goldfinch',\n    'goose',\n    'gopher',\n    'gorilla',\n    'grasshopper',\n    'groundhog',\n    'guanaco',\n    'guitarfish',\n    'haddock',\n    'hagfish',\n    'halibut',\n    'hamster',\n    'hartebeest',\n    'hawksbill',\n    'hedgehog',\n    'herring',\n    'honeybadger',\n    'horsefly',\n    'hummingbird',\n    'humpback',\n    'hyena',\n    'iguana',\n    'impala',\n    'jackal',\n    'jackrabbit',\n    'jaguar',\n    'jellyfish',\n    'kangaroo',\n    'kingfisher',\n    'kingsnake',\n    'koalabear',\n    'kookaburra',\n    'lacewing',\n    'ladybug',\n    'lemming',\n    'lemur',\n    'leopard',\n    'lion',\n    'lizard',\n    'llama',\n    'lobster',\n    'locust',\n    'lovebird',\n    'lynx',\n    'macaque',\n    'mackerel',\n    'magpie',\n    'mallard',\n    'mamba',\n    'manatee',\n    'mandrill',\n    'mantis',\n    'meadowlark',\n    'meerkat',\n    'merlin',\n    'millipede',\n    'mockingbird',\n    'mongoose',\n    'monkey',\n    'moose',\n    'mosquito',\n    'mouse',\n    'mudpuppy',\n    'mudskipper',\n    'muskrat',\n    'narwhal',\n    'nautilus',\n    'nighthawk',\n    'nightingale',\n    'ocelot',\n    'octopus',\n    'okapi',\n    'opossum',\n    'orangutan',\n    'oryx',\n    'osprey',\n    'ostrich',\n    'otter',\n    'owl',\n    'oyster',\n    'oystercatcher',\n    'panda',\n    'pangolin',\n    'panther',\n    'parakeet',\n    'parrot',\n    'parrotfish',\n    'partridge',\n    'peacock',\n    'pelican',\n    'penguin',\n    'pheasant',\n    'pig',\n    'pigeon',\n    'piranha',\n    'polecat',\n    'porcupine',\n    'porpoise',\n    'possum',\n    'ptarmigan',\n    'puffin',\n    'puma',\n    'python',\n    'quail',\n    'quetzal',\n    'raccoon',\n    'rattlesnake',\n    'reindeer',\n    'rhinoceros',\n    'roadrunner',\n    'rotifer',\n    'salamander',\n    'salmon',\n    'sandfish',\n    'sardine',\n    'scallop',\n    'scorpion',\n    'seasquirt',\n    'seagull',\n    'seahorse',\n    'seal',\n    'shark',\n    'sheep',\n    'shrew',\n    'shrimp',\n    'sidewinder',\n    'silkworm',\n    'silverfish',\n    'skunk',\n    'skylark',\n    'sloth',\n    'slug',\n    'snail',\n    'snake',\n    'sparrow',\n    'sparrowhawk',\n    'spider',\n    'sponge',\n    'spoonbill',\n    'springbok',\n    'squid',\n    'squirrel',\n    'starfish',\n    'starling',\n    'stingray',\n    'stork',\n    'sturgeon',\n    'swallow',\n    'swan',\n    'swordfish',\n    'tadpole',\n    'tapir',\n    'tarantula',\n    'terrapin',\n    'tiger',\n    'tilapia',\n    'toad',\n    'tortoise',\n    'toucan',\n    'treefrog',\n    'treesnake',\n    'triggerfish',\n    'trout',\n    'tuna',\n    'turkey',\n    'turtle',\n    'urchin',\n    'vicuña',\n    'viper',\n    'vulture',\n    'wallaby',\n    'walrus',\n    'warthog',\n    'wasp',\n    'whitefish',\n    'wildebeest',\n    'wolf',\n    'wolverine',\n    'wombat',\n    'woodchuck',\n    'woodpecker',\n    'yak',\n    'yellowjacket',\n    'zebra',\n  ],\n]\n\nexport const randomUserName = (): string => userNameParts.map(randomElement).join('.')\n","import { Middleware } from 'redux'\n\nimport debug from 'debug'\nconst log = debug('lf:todo:logger')\n\nexport const logger: Middleware = store => next => action => {\n  log('action', action)\n  log('prev state', store.getState())\n\n  const result = next(action)\n\n  log('next state', store.getState())\n\n  return result\n}\n","import { ProxyReducer } from '@localfirst/state'\nimport { ActionType } from './actions'\n\nconst { SET_FILTER, ADD_TODO, DESTROY_TODO, TOGGLE_TODO, EDIT_TODO, CLEAR_COMPLETED } = ActionType\n\nexport const proxyReducer: ProxyReducer = (state, { type, payload }) => {\n  switch (type) {\n    case ADD_TODO: {\n      const { id, content } = payload\n      return (s) => {\n        s.todoList.push(id)\n        s.todoMap[id] = { id, content, completed: false }\n      }\n    }\n\n    case DESTROY_TODO: {\n      const { id } = payload\n      return (s) => {\n        delete s.todoMap[id]\n        s.todoList = s.todoList.filter((_id: string) => _id !== payload.id)\n      }\n    }\n\n    case TOGGLE_TODO: {\n      const { id } = payload\n      return (s) => (s.todoMap[id].completed = !s.todoMap[id].completed)\n    }\n\n    case EDIT_TODO: {\n      const { id, content } = payload\n      return (s) => (s.todoMap[id].content = content)\n    }\n\n    case SET_FILTER:\n      return (s) => (s.visibilityFilter = payload.filter)\n\n    case CLEAR_COMPLETED:\n      return (s) => {\n        s.todoList = s.todoList.filter((id: string) => !s.todoMap[id].completed)\n        for (const id in s.todoMap) {\n          if (!s.todoList.includes(id)) delete s.todoMap[id]\n        }\n      }\n\n    default:\n      return null\n  }\n}\n","import { StoreManager } from '@localfirst/state'\nimport { VisibilityFilter, State } from '../types'\nimport { logger } from './logger'\nimport { proxyReducer } from './reducers'\n\nconst initialState = {\n  visibilityFilter: VisibilityFilter.ALL,\n  todoList: [],\n  todoMap: {},\n}\n\nconst middlewares = [logger]\n\nexport const storeManager = new StoreManager<State>({\n  databaseName: 'todo',\n  proxyReducer,\n  initialState,\n  middlewares,\n})\n","import { randomDiscoveryKey } from 'lib/randomName'\nimport React, { useState } from 'react'\nimport Redux from 'redux'\nimport { Provider } from 'react-redux'\nimport { useQueryParam } from 'use-query-params'\nimport { Toolbar } from '@localfirst/toolbar'\nimport { Todos } from '.'\nimport { useStore } from '../redux/useStore'\nimport { storeManager } from '../redux/store'\n\nexport const App: React.FC = () => {\n  const [key, setKey] = useQueryParam<string>('key')\n\n  const generateNewKey = () => {\n    const newKey = randomDiscoveryKey()\n    setKey(newKey)\n    return newKey\n  }\n\n  const appStore = useStore(key, generateNewKey)\n  const [_, setAppStore] = useState<Redux.Store>()\n  const onStoreReady = (store: Redux.Store) => setAppStore(store)\n\n  return appStore ? (\n    <Provider store={appStore}>\n      <Toolbar storeManager={storeManager} onStoreReady={onStoreReady}/>\n      <Todos />\n    </Provider>\n  ) : null\n}\n","import { useEffect, useState } from 'react'\nimport Redux from 'redux'\nimport { storeManager } from './store'\n\nexport const useStore = (key: string | undefined, generateNewKey: () => string) => {\n  const [appStore, setAppStore] = useState<Redux.Store>()\n\n  useEffect(\n    () => {\n      if (key) {\n        storeManager.joinStore(key).then((newStore) => setAppStore(newStore))\n      } else {\n        const newKey = generateNewKey()\n        storeManager.createStore(newKey).then((newStore) => setAppStore(newStore))\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [key]\n  )\n  return appStore\n}\n","import cn from 'classnames'\nimport React, { FormEventHandler, KeyboardEventHandler, useEffect, useRef, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { actions } from '../redux/actions'\nimport { Todo as TodoType } from '../types'\n\nexport const Todo = ({ id, completed, content }: TodoType) => {\n  const dispatch = useDispatch()\n\n  // component state\n  const [editing, setEditing] = useState(false)\n  const [editContent, setEditContent] = useState(content)\n\n  // input.current will contain a reference to the editing input\n  const input = useRef<HTMLInputElement>() as React.RefObject<HTMLInputElement>\n\n  useEffect(() => {\n    // side effect: need to select all content in the input when going into editing mode\n    // this will only fire when `editing` changes\n    if (editing && input.current) input.current.select()\n  }, [editing, input])\n\n  // we save when the user has either tabbed or clicked away, or hit Enter\n  const save: FormEventHandler<HTMLInputElement> = (e: React.FormEvent<HTMLInputElement>) => {\n    const saveContent = (e.target as HTMLInputElement).value.trim()\n    if (saveContent.length > 0) {\n      // todo was changed - keep the edited content\n      dispatch(actions.editTodo(id, saveContent))\n    } else {\n      // user has removed all the content of the todo, so delete it\n      dispatch(actions.destroyTodo(id))\n    }\n    leaveEditMode()\n  }\n\n  // listen for special keys\n  const onKeyDown: KeyboardEventHandler<HTMLInputElement> = (e) => {\n    if (e.key === 'Escape') {\n      restoreContent()\n      leaveEditMode()\n    } else if (e.key === 'Enter') {\n      save(e)\n    }\n  }\n\n  const enterEditMode = () => setEditing(true)\n  const leaveEditMode = () => setEditing(false)\n\n  const updateContent: FormEventHandler<HTMLInputElement> = (e) =>\n    setEditContent((e.target as HTMLInputElement).value)\n  const restoreContent = () => setEditContent(content)\n\n  return (\n    <li className={cn({ completed, editing })}>\n      <div className=\"view\">\n        <input\n          className=\"toggle\"\n          type=\"checkbox\"\n          checked={completed}\n          onChange={() => dispatch(actions.toggleTodo(id))}\n        />\n        <label onClick={enterEditMode}>{content}</label>\n        <button\n          className=\"destroy\"\n          style={{ cursor: 'pointer' }}\n          onClick={() => dispatch(actions.destroyTodo(id))}\n        />\n      </div>\n\n      <input\n        className=\"edit\"\n        ref={input}\n        value={editContent}\n        onBlur={save}\n        onChange={updateContent}\n        onKeyDown={onKeyDown}\n      />\n    </li>\n  )\n}\n","import { VisibilityFilter, State } from '../types'\n\nexport const getVisibilityFilter = (state: State) => {\n  if (!state || !state.visibilityFilter) return VisibilityFilter.ALL\n  return state.visibilityFilter\n}\n\nexport const getTodo = (id: string) => (state: State) => ({\n  ...state.todoMap[id],\n  id,\n})\n\nexport const getAllTodos = (state: State) => {\n  if (!state || !state.todoList) return []\n  return state.todoList.map(id => getTodo(id)(state))\n}\n\nexport const getFilteredTodos = (filter: VisibilityFilter) => (state: State) => {\n  const allTodos = getAllTodos(state)\n  switch (filter) {\n    case VisibilityFilter.ALL:\n      return allTodos\n    case VisibilityFilter.INCOMPLETE:\n      return allTodos.filter(todo => !todo.completed)\n    case VisibilityFilter.COMPLETED:\n      return allTodos.filter(todo => todo.completed)\n    default:\n      throw new Error(`Unknown visibility filter '${filter}'`)\n  }\n}\n\nexport const getVisibleTodos = (state: State) => {\n  const visibilityFilter = getVisibilityFilter(state)\n  return getFilteredTodos(visibilityFilter)(state)\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Todo } from '.'\nimport { getVisibleTodos } from '../redux/selectors'\n\nexport const TodoList = () => {\n  const todos = useSelector(getVisibleTodos)\n\n  return (\n    <ul className=\"todo-list\">\n      {todos && todos.map(todo => <Todo key={`todo-${todo.id}`} {...todo} />)}\n    </ul>\n  )\n}\n","import cx from 'classnames'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\nimport { getFilteredTodos } from 'redux/selectors'\nimport { VisibilityFilter } from '../types'\n\nimport { AddTodo, ClearCompletedButton, TodoList, VisibilityFilters } from '.'\nimport { pluralize } from '../lib/pluralize'\n\nexport function Todos() {\n  const activeTodos = useSelector(getFilteredTodos(VisibilityFilter.INCOMPLETE))\n  const allTodos = useSelector(getFilteredTodos(VisibilityFilter.ALL))\n  const activeCount = activeTodos.length\n  const hidden = allTodos.length === 0\n\n  return (\n    <div className=\"main\">\n      <section className=\"todoapp\" style={{ flexGrow: 2 }}>\n        <header className=\"header\">\n          <h1>todos</h1>\n          <AddTodo />\n        </header>\n        <section className={cx({ main: true, hidden })}>\n          <TodoList />\n        </section>\n        <footer className={cx({ footer: true, hidden })}>\n          <span className=\"todo-count\">\n            <strong>{activeCount}</strong> {pluralize(activeCount, 'item')} left\n          </span>\n          <VisibilityFilters />\n          <ClearCompletedButton />\n        </footer>\n      </section>\n    </div>\n  )\n}\n","export const pluralize = (count: number, word: string) =>\n  count === 1 ? word : word + 's'\n","import React, { MouseEventHandler } from 'react'\nimport cn from 'classnames'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { actions } from '../redux/actions'\nimport { VisibilityFilter, VisibilityFilterKey, State } from '../types'\n\nexport const VisibilityFilters = () => {\n  const activeFilter = useSelector((state: State) => {\n    if (!state || !state.visibilityFilter) return VisibilityFilter.ALL\n    return state.visibilityFilter\n  })\n  const dispatch = useDispatch()\n\n  return (\n    <ul className=\"filters\">\n      {Object.keys(VisibilityFilter).map(filterKey => {\n        const currentFilter = VisibilityFilter[filterKey as VisibilityFilterKey]\n\n        const selected = currentFilter === activeFilter\n\n        const onClick: MouseEventHandler = e => {\n          e.preventDefault()\n          dispatch(actions.setFilter(currentFilter))\n        }\n\n        return (\n          <li key={`visibility-filter-${currentFilter}`}>\n            {/* linter doesn't like not having an href */}\n            {/* eslint-disable-next-line */}\n            <a className={cn({ selected })} onClick={onClick} style={{ cursor: 'pointer' }}>\n              {currentFilter}\n            </a>\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useDispatch } from 'react-redux'\n\nimport { actions } from '../redux/actions'\nimport { getFilteredTodos } from '../redux/selectors'\nimport { VisibilityFilter } from '../types'\n\nexport function ClearCompletedButton() {\n  const dispatch = useDispatch()\n\n  // don't render this button if there are no completed todos\n  const completedTodos = useSelector(getFilteredTodos(VisibilityFilter.COMPLETED))\n  if (completedTodos.length === 0) return null\n\n  const clearCompleted = () => dispatch(actions.clearCompleted())\n\n  return (\n    <button className=\"clear-completed\" onClick={clearCompleted}>\n      Clear completed\n    </button>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './components'\nimport * as serviceWorker from './serviceWorker'\n\nconst start = () => {\n  ReactDOM.render(<App />, document.getElementById('root'))\n}\n\nstart()\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n","\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Group = void 0;\nconst jsx_runtime_1 = require(\"@emotion/react/jsx-runtime\");\nconst Group = (_a) => {\n    var { children } = _a, props = __rest(_a, [\"children\"]);\n    return (jsx_runtime_1.jsx(\"div\", Object.assign({ className: \"h-10 py-1 px-3 border-r border-gray-400 justify-center flex \", css: {\n            minWidth: 40,\n            label: {\n                margin: 'auto',\n                padding: '0 1em',\n            },\n        } }, props, { children: children }), void 0));\n};\nexports.Group = Group;\n//# sourceMappingURL=Group.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ensure = exports.isDropFlag = exports.isDeleteFlag = exports.isChange = exports.isFunction = void 0;\nconst isFunction = (x) => typeof x === 'function';\nexports.isFunction = isFunction;\nconst isChange = (x) => x.hasOwnProperty('fn');\nexports.isChange = isChange;\nconst isDeleteFlag = (x) => x.hasOwnProperty('delete');\nexports.isDeleteFlag = isDeleteFlag;\nconst isDropFlag = (x) => x.hasOwnProperty('drop');\nexports.isDropFlag = isDropFlag;\n__exportStar(require(\"@localfirst/storage-abstract\"), exports);\nfunction ensure(arg) {\n    if (!arg) {\n        throw new Error('BUG: Assertion failed and argument was undefined at this point in time');\n    }\n    return arg;\n}\nexports.ensure = ensure;\n//# sourceMappingURL=types.js.map"],"sourceRoot":""}